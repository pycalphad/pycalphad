name: Tests

on: [push, pull_request]

jobs:
  Tests:
    env:
      CYTHON_COVERAGE: 1
    name: Test ${{ matrix.os }} with ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 100
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # fetch the entire repo history, required to guarantee versioneer will pick up the tags
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
      - run: uv sync --dev
      - run: uv run pytest -v --import-mode=append --cov --cov-config=pyproject.toml --pyargs pycalphad
      - run: uv run coverage xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage.xml

  Upload-Coverage:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
      # The source code _must_ be checked out for coverage to be processed at Codecov.
      - uses: actions/checkout@v5
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: coverage-*
      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          fail_ci_if_error: true
