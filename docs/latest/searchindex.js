Search.setIndex({"alltitles": {"0.1 (2015-04-09)": [[0, "id41"]], "0.1.1 (2015-04-09)": [[0, "id40"]], "0.1.1.post1 (2015-04-10)": [[0, "post1-2015-04-10"]], "0.10.0 (2022-02-21)": [[0, "id6"]], "0.10.1 (2022-05-25)": [[0, "id5"]], "0.10.2 (2023-02-14)": [[0, "id4"]], "0.10.3 (2023-09-13)": [[0, "id3"]], "0.10.4 (2024-01-29)": [[0, "id2"]], "0.10.5 (2024-07-12)": [[0, "id1"]], "0.2 (2015-08-23)": [[0, "id39"]], "0.2.1 (2015-09-10)": [[0, "id38"]], "0.2.2 (2015-10-17)": [[0, "id37"]], "0.2.3 (2015-11-08)": [[0, "id36"]], "0.2.4 (2015-11-18)": [[0, "id35"]], "0.2.5 (2015-12-22)": [[0, "id34"]], "0.3 (2016-02-17)": [[0, "id33"]], "0.3.1 (2016-02-18)": [[0, "id32"]], "0.3.2 (2016-02-22)": [[0, "id31"]], "0.3.3 (2016-04-21)": [[0, "id30"]], "0.3.4 (2016-04-28)": [[0, "id29"]], "0.3.5 (2016-05-14)": [[0, "id28"]], "0.3.6 (2016-06-01)": [[0, "id27"]], "0.4 (2016-08-03)": [[0, "id26"]], "0.4.1 (2016-08-08)": [[0, "id25"]], "0.4.2 (2016-08-26)": [[0, "id24"]], "0.5 (2017-05-04)": [[0, "id23"]], "0.5.1 (2017-05-12)": [[0, "id22"]], "0.5.2 (2017-08-10)": [[0, "id21"]], "0.6 (2017-11-26)": [[0, "id20"]], "0.6.1 (2017-12-01)": [[0, "id19"]], "0.7 (2018-03-19)": [[0, "id18"]], "0.7.1 (2018-11-14)": [[0, "id17"]], "0.8 (2019-05-31)": [[0, "id16"]], "0.8.1 (2019-11-28)": [[0, "id15"]], "0.8.2 (2020-03-07)": [[0, "id14"]], "0.8.3 (2020-03-31)": [[0, "id13"]], "0.8.4 (2020-10-28)": [[0, "id12"]], "0.8.5 (2021-05-20)": [[0, "id11"]], "0.9.0 (2021-06-06)": [[0, "id9"]], "0.9.1 (2021-08-08)": [[0, "id8"]], "0.9.2 (2021-08-12)": [[0, "id7"]], "API Documentation": [[2, "api-documentation"]], "Acknowledgements": [[21, "acknowledgements"]], "Activate your conda environment in Anaconda Prompt": [[22, "activate-your-conda-environment-in-anaconda-prompt"]], "Adding the ETA parameter to the TDB parser": [[18, "Adding-the-ETA-parameter-to-the-TDB-parser"]], "Al-Fe (Heat Capacity and Degree of Ordering)": [[13, "Al-Fe-(Heat-Capacity-and-Degree-of-Ordering)"]], "Al-Fe (M. Seiersten, 1991)": [[10, "Al-Fe-(M.-Seiersten,-1991)"]], "Al-Mg (Y. Zhong, 2005)": [[10, "Al-Mg-(Y.-Zhong,-2005)"]], "Al-Ni (Degree of Ordering)": [[13, "Al-Ni-(Degree-of-Ordering)"]], "Al-Ni (Dupin, 2001)": [[10, "Al-Ni-(Dupin,-2001)"]], "Al-Zn (S. Mey, 1993)": [[10, "Al-Zn-(S.-Mey,-1993)"]], "Building a local version of the Pycalphad website": [[22, "building-a-local-version-of-the-pycalphad-website"]], "Calculate and Plot Activity": [[14, "Calculate-and-Plot-Activity"]], "Calculate the equilibria": [[14, "Calculate-the-equilibria"]], "Calculate the reference state": [[14, "Calculate-the-reference-state"]], "Calculating Energy Surfaces of Binary Systems": [[10, "Calculating-Energy-Surfaces-of-Binary-Systems"]], "Calculations at specific site fractions": [[15, "Calculations-at-specific-site-fractions"]], "Calculations with Reference States": [[15, "Calculations-with-Reference-States"]], "Citing": [[21, "citing"]], "Create a release of pycalphad": [[23, "create-a-release-of-pycalphad"]], "Custom Models in pycalphad: Viscosity": [[18, "Custom-Models-in-pycalphad:-Viscosity"]], "Dataset structure": [[17, "Dataset-structure"]], "Deploy to PyPI (manually)": [[23, "deploy-to-pypi-manually"]], "Deploy to conda-forge": [[23, "deploy-to-conda-forge"]], "Developer": [[21, null]], "Development version": [[1, "development-version"]], "Enthalpy of formation - convex hull": [[15, "Enthalpy-of-formation---convex-hull"]], "Enthalpy of mixing": [[15, "Enthalpy-of-mixing"]], "Equilibrium Properties and Partial Ordering (Al-Fe and Al-Ni)": [[13, "Equilibrium-Properties-and-Partial-Ordering-(Al-Fe-and-Al-Ni)"]], "Examples": [[19, "examples"]], "Experimental Reference States: Formation and Mixing Energy": [[15, "Experimental-Reference-States:-Formation-and-Mixing-Energy"]], "Experimental activity results": [[14, "Experimental-activity-results"]], "Exploring calculate and equilibrium xarray Datasets": [[17, "Exploring-calculate-and-equilibrium-xarray-Datasets"]], "FAQ": [[20, "faq"]], "Get the chemical potentials and calculate activity": [[14, "Get-the-chemical-potentials-and-calculate-activity"]], "Getting Help": [[21, "getting-help"]], "Heat Capacity of Cementite (Fe_3C)": [[11, "Heat-Capacity-of-Cementite-(Fe_3C)"]], "How long should equilibrium calculations take?": [[20, "how-long-should-equilibrium-calculations-take"]], "How to create your conda environment": [[22, "how-to-create-your-conda-environment"]], "How to recompile Pycalphad": [[22, "how-to-recompile-pycalphad"]], "Indices and tables": [[21, "indices-and-tables"]], "Install pycalphad": [[1, "install-pycalphad"]], "Installing": [[1, "installing"]], "Is any parallelism supported in pycalphad?": [[20, "is-any-parallelism-supported-in-pycalphad"]], "Logo pycalphad: Computational Thermodynamics": [[21, "logo-pycalphad-computational-thermodynamics"]], "Module contents": [[3, "module-pycalphad"], [4, "module-pycalphad.codegen"], [5, "module-pycalphad.core"], [6, "module-pycalphad.io"], [7, "module-pycalphad.models"], [8, "module-pycalphad.plot"], [9, "module-pycalphad.plot.binary"]], "Nb-Re (Liu, 2013)": [[10, "Nb-Re-(Liu,-2013)"]], "Onboarding as a Developer": [[22, "onboarding-as-a-developer"]], "Performing Calculations": [[18, "Performing-Calculations"]], "Phases with Electrically Charged Species": [[12, "Phases-with-Electrically-Charged-Species"]], "Plot the result": [[14, "Plot-the-result"]], "Plots": [[13, "Plots"], [13, "id1"]], "Plotting Isobaric Binary Phase Diagrams with binplot": [[10, "Plotting-Isobaric-Binary-Phase-Diagrams-with-binplot"]], "Plotting Ternary Phase Diagrams and Using Triangular Axes": [[16, "Plotting-Ternary-Phase-Diagrams-and-Using-Triangular-Axes"]], "Potential errors and their solutions": [[22, "potential-errors-and-their-solutions"]], "RecursionError during a calculation": [[20, "recursionerror-during-a-calculation"]], "Releasing pycalphad": [[23, "releasing-pycalphad"]], "Set up the database": [[14, "Set-up-the-database"]], "Setting up your fork and remote repositories": [[22, "setting-up-your-fork-and-remote-repositories"]], "Setting your VSCode environment": [[22, "setting-your-vscode-environment"]], "Special _MIX Reference State": [[15, "Special-_MIX-Reference-State"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"]], "Subpackages": [[3, "subpackages"], [8, "subpackages"]], "TDB Parameters": [[18, "TDB-Parameters"]], "TDB files": [[10, "TDB-files"]], "Text is sometimes cut off when saving figures": [[20, "text-is-sometimes-cut-off-when-saving-figures"]], "TypeError: argument is not an mpz during a calculation": [[20, "typeerror-argument-is-not-an-mpz-during-a-calculation"]], "Upgrading": [[1, "upgrading"]], "Viscosity Model Background": [[18, "Viscosity-Model-Background"]], "What units does pycalphad use?": [[20, "what-units-does-pycalphad-use"]], "What\u2019s New": [[0, "what-s-new"]], "Workplace setup & software tutorials": [[22, "workplace-setup-software-tutorials"]], "Writing the Custom Viscosity Model": [[18, "Writing-the-Custom-Viscosity-Model"]], "binplot": [[10, "binplot"]], "calculate() results": [[17, "calculate()-results"]], "conda": [[1, "conda"]], "equilibrium() results": [[17, "equilibrium()-results"]], "pip (recommended)": [[1, "pip-recommended"]], "pycalphad package": [[3, "pycalphad-package"]], "pycalphad.codegen package": [[4, "pycalphad-codegen-package"]], "pycalphad.codegen.callables module": [[4, "module-pycalphad.codegen.callables"]], "pycalphad.codegen.sympydiff_utils module": [[4, "module-pycalphad.codegen.sympydiff_utils"]], "pycalphad.core package": [[5, "pycalphad-core-package"]], "pycalphad.core.cache module": [[5, "module-pycalphad.core.cache"]], "pycalphad.core.calculate module": [[5, "module-pycalphad.core.calculate"]], "pycalphad.core.cartesian module": [[5, "module-pycalphad.core.cartesian"]], "pycalphad.core.composition_set module": [[5, "module-pycalphad.core.composition_set"]], "pycalphad.core.constants module": [[5, "module-pycalphad.core.constants"]], "pycalphad.core.constraints module": [[5, "module-pycalphad.core.constraints"]], "pycalphad.core.eqsolver module": [[5, "module-pycalphad.core.eqsolver"]], "pycalphad.core.equilibrium module": [[5, "module-pycalphad.core.equilibrium"]], "pycalphad.core.errors module": [[5, "module-pycalphad.core.errors"]], "pycalphad.core.halton module": [[5, "module-pycalphad.core.halton"]], "pycalphad.core.hyperplane module": [[5, "module-pycalphad.core.hyperplane"]], "pycalphad.core.light_dataset module": [[5, "module-pycalphad.core.light_dataset"]], "pycalphad.core.lower_convex_hull module": [[5, "module-pycalphad.core.lower_convex_hull"]], "pycalphad.core.minimizer module": [[5, "module-pycalphad.core.minimizer"]], "pycalphad.core.phase_rec module": [[5, "module-pycalphad.core.phase_rec"]], "pycalphad.core.solver module": [[5, "module-pycalphad.core.solver"]], "pycalphad.core.starting_point module": [[5, "module-pycalphad.core.starting_point"]], "pycalphad.core.utils module": [[5, "module-pycalphad.core.utils"]], "pycalphad.io package": [[6, "pycalphad-io-package"]], "pycalphad.io.cs_dat module": [[6, "module-pycalphad.io.cs_dat"]], "pycalphad.io.database module": [[6, "module-pycalphad.io.database"]], "pycalphad.io.grammar module": [[6, "module-pycalphad.io.grammar"]], "pycalphad.io.tdb module": [[6, "module-pycalphad.io.tdb"]], "pycalphad.io.tdb_keywords module": [[6, "module-pycalphad.io.tdb_keywords"]], "pycalphad.model module": [[3, "module-pycalphad.model"]], "pycalphad.models package": [[7, "pycalphad-models-package"]], "pycalphad.models.model_mqmqa module": [[7, "module-pycalphad.models.model_mqmqa"]], "pycalphad.plot package": [[8, "pycalphad-plot-package"]], "pycalphad.plot.binary package": [[9, "pycalphad-plot-binary-package"]], "pycalphad.plot.binary.compsets module": [[9, "module-pycalphad.plot.binary.compsets"]], "pycalphad.plot.binary.map module": [[9, "module-pycalphad.plot.binary.map"]], "pycalphad.plot.binary.plot module": [[9, "module-pycalphad.plot.binary.plot"]], "pycalphad.plot.binary.zpf_boundary_sets module": [[9, "module-pycalphad.plot.binary.zpf_boundary_sets"]], "pycalphad.plot.eqplot module": [[8, "module-pycalphad.plot.eqplot"]], "pycalphad.plot.ternary module": [[8, "module-pycalphad.plot.ternary"]], "pycalphad.plot.utils module": [[8, "module-pycalphad.plot.utils"]], "pycalphad.variables module": [[3, "module-pycalphad.variables"]], "ternplot": [[16, "ternplot"]], "triangular projection": [[16, "triangular-projection"]], "xarray Datasets": [[17, "xarray-Datasets"]]}, "docnames": ["CHANGES", "INSTALLING", "api/modules", "api/pycalphad", "api/pycalphad.codegen", "api/pycalphad.core", "api/pycalphad.io", "api/pycalphad.models", "api/pycalphad.plot", "api/pycalphad.plot.binary", "examples/BinaryExamples", "examples/CementiteAnalysis", "examples/ChargedPhases", "examples/EquilibriumWithOrdering", "examples/PlotActivity", "examples/ReferenceStateExamples", "examples/TernaryExamples", "examples/UsingCalculationResults", "examples/ViscosityModel", "examples/index", "faq", "index", "onboarding", "releasing"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["CHANGES.rst", "INSTALLING.rst", "api/modules.rst", "api/pycalphad.rst", "api/pycalphad.codegen.rst", "api/pycalphad.core.rst", "api/pycalphad.io.rst", "api/pycalphad.models.rst", "api/pycalphad.plot.rst", "api/pycalphad.plot.binary.rst", "examples/BinaryExamples.nblink", "examples/CementiteAnalysis.nblink", "examples/ChargedPhases.nblink", "examples/EquilibriumWithOrdering.nblink", "examples/PlotActivity.nblink", "examples/ReferenceStateExamples.nblink", "examples/TernaryExamples.nblink", "examples/UsingCalculationResults.nblink", "examples/ViscosityModel.nblink", "examples/index.rst", "faq.rst", "index.rst", "onboarding.rst", "releasing.rst"], "indexentries": {"a (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.a", false]], "acentric_factor (pycalphad.io.cs_dat.endmemberrealgas attribute)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.acentric_factor", false]], "add_compsets() (pycalphad.plot.binary.zpf_boundary_sets.twophaseregion method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion.add_compsets", false]], "add_compsets() (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.add_compsets", false]], "add_nearly_stable() (in module pycalphad.core.eqsolver)": [[5, "pycalphad.core.eqsolver.add_nearly_stable", false]], "add_parameter() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.add_parameter", false]], "add_phase() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.add_phase", false]], "add_phase_constituents() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.add_phase_constituents", false]], "add_phase_symmetry_ordering_parameters() (in module pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.add_phase_symmetry_ordering_parameters", false]], "add_structure_entry() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.add_structure_entry", false]], "add_variable() (pycalphad.core.light_dataset.lightdataset method)": [[5, "pycalphad.core.light_dataset.LightDataset.add_variable", false]], "additional_anion_mixing_const (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.additional_anion_mixing_const", false]], "additional_cation_mixing_const (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.additional_cation_mixing_const", false]], "additional_coeff_pairs (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.additional_coeff_pairs", false]], "additional_coeff_pairs (pycalphad.io.cs_dat.intervalg attribute)": [[6, "pycalphad.io.cs_dat.IntervalG.additional_coeff_pairs", false]], "additionalcoefficientpair (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.AdditionalCoefficientPair", false]], "advance_state() (in module pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.advance_state", false]], "all_compsets (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.all_compsets", false]], "ast (pycalphad.model.model property)": [[3, "pycalphad.model.Model.ast", false]], "ast (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.ast", false]], "atomic_ordering_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.atomic_ordering_energy", false]], "attrs (pycalphad.core.light_dataset.lightdataset attribute)": [[5, "pycalphad.core.light_dataset.LightDataset.attrs", false]], "b (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.b", false]], "beta (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.beta", false]], "beta (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.beta", false]], "binarycompset (class in pycalphad.plot.binary.compsets)": [[9, "pycalphad.plot.binary.compsets.BinaryCompset", false]], "binplot() (in module pycalphad.plot.binary.plot)": [[9, "pycalphad.plot.binary.plot.binplot", false]], "bmag (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.BMAG", false]], "bmag (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.BMAG", false]], "build_callables() (in module pycalphad.codegen.callables)": [[4, "pycalphad.codegen.callables.build_callables", false]], "build_constraint_functions() (in module pycalphad.codegen.sympydiff_utils)": [[4, "pycalphad.codegen.sympydiff_utils.build_constraint_functions", false]], "build_constraints() (in module pycalphad.core.constraints)": [[5, "pycalphad.core.constraints.build_constraints", false]], "build_functions() (in module pycalphad.codegen.sympydiff_utils)": [[4, "pycalphad.codegen.sympydiff_utils.build_functions", false]], "build_phase() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.build_phase", false]], "build_phase() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.build_phase", false]], "build_phase_records() (in module pycalphad.codegen.callables)": [[4, "pycalphad.codegen.callables.build_phase_records", false]], "buildfunctionsresult (class in pycalphad.codegen.sympydiff_utils)": [[4, "pycalphad.codegen.sympydiff_utils.BuildFunctionsResult", false]], "cacheit() (in module pycalphad.core.cache)": [[5, "pycalphad.core.cache.cacheit", false]], "calculate() (in module pycalphad.core.calculate)": [[5, "pycalphad.core.calculate.calculate", false]], "calculateerror": [[5, "pycalphad.core.errors.CalculateError", false]], "canonical_sort_key() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.canonical_sort_key", false]], "cartesian() (in module pycalphad.core.cartesian)": [[5, "pycalphad.core.cartesian.cartesian", false]], "charge (pycalphad.io.cs_dat.endmemberaqueous attribute)": [[6, "pycalphad.io.cs_dat.EndmemberAqueous.charge", false]], "charge (pycalphad.variables.species attribute)": [[3, "pycalphad.variables.Species.charge", false]], "check_convergence() (pycalphad.core.minimizer.systemspecification method)": [[5, "pycalphad.core.minimizer.SystemSpecification.check_convergence", false]], "chemical_group (pycalphad.io.cs_dat.endmemberqkto attribute)": [[6, "pycalphad.io.cs_dat.EndmemberQKTO.chemical_group", false]], "chemical_group_overrides (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.chemical_group_overrides", false]], "chemical_potentials (pycalphad.core.minimizer.systemstate attribute)": [[5, "pycalphad.core.minimizer.SystemState.chemical_potentials", false]], "chemical_potentials (pycalphad.core.solver.solverresult attribute)": [[5, "pycalphad.core.solver.SolverResult.chemical_potentials", false]], "chemicalpotential (class in pycalphad.variables)": [[3, "pycalphad.variables.ChemicalPotential", false]], "classproperty (class in pycalphad.model)": [[3, "pycalphad.model.classproperty", false]], "coefficient (pycalphad.io.cs_dat.additionalcoefficientpair attribute)": [[6, "pycalphad.io.cs_dat.AdditionalCoefficientPair.coefficient", false]], "coefficients (pycalphad.io.cs_dat.excessqkto attribute)": [[6, "pycalphad.io.cs_dat.ExcessQKTO.coefficients", false]], "coefficients (pycalphad.io.cs_dat.excessrkm attribute)": [[6, "pycalphad.io.cs_dat.ExcessRKM.coefficients", false]], "coefficients (pycalphad.io.cs_dat.intervalg attribute)": [[6, "pycalphad.io.cs_dat.IntervalG.coefficients", false]], "components (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.components", false]], "components (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.components", false]], "compositions (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.compositions", false]], "compositionset (class in pycalphad.core.composition_set)": [[5, "pycalphad.core.composition_set.CompositionSet", false]], "compsetpair (class in pycalphad.plot.binary.compsets)": [[9, "pycalphad.plot.binary.compsets.CompsetPair", false]], "compsets (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.compsets", false]], "compsets (pycalphad.plot.binary.zpf_boundary_sets.twophaseregion attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion.compsets", false]], "compsets_belong_in_region() (pycalphad.plot.binary.zpf_boundary_sets.twophaseregion method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion.compsets_belong_in_region", false]], "compsetstate (class in pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.CompsetState", false]], "cond() (pycalphad.io.cs_dat.intervalbase method)": [[6, "pycalphad.io.cs_dat.IntervalBase.cond", false]], "conditionerror": [[5, "pycalphad.core.errors.ConditionError", false]], "cons_func (pycalphad.codegen.sympydiff_utils.constraintfunctions attribute)": [[4, "pycalphad.codegen.sympydiff_utils.ConstraintFunctions.cons_func", false]], "cons_hess (pycalphad.codegen.sympydiff_utils.constraintfunctions attribute)": [[4, "pycalphad.codegen.sympydiff_utils.ConstraintFunctions.cons_hess", false]], "cons_jac (pycalphad.codegen.sympydiff_utils.constraintfunctions attribute)": [[4, "pycalphad.codegen.sympydiff_utils.ConstraintFunctions.cons_jac", false]], "constituent_array (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.constituent_array", false]], "constituent_array() (pycalphad.io.cs_dat.endmember method)": [[6, "pycalphad.io.cs_dat.Endmember.constituent_array", false]], "constituent_array() (pycalphad.io.cs_dat.excessbase method)": [[6, "pycalphad.io.cs_dat.ExcessBase.constituent_array", false]], "constituents (pycalphad.io.database.phase attribute)": [[6, "pycalphad.io.database.Phase.constituents", false]], "constituents (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.constituents", false]], "constituents (pycalphad.variables.species attribute)": [[3, "pycalphad.variables.Species.constituents", false]], "constituents() (pycalphad.io.cs_dat.endmember method)": [[6, "pycalphad.io.cs_dat.Endmember.constituents", false]], "constraintfunctions (class in pycalphad.codegen.sympydiff_utils)": [[4, "pycalphad.codegen.sympydiff_utils.ConstraintFunctions", false]], "constrainttuple (class in pycalphad.core.constraints)": [[5, "pycalphad.core.constraints.ConstraintTuple", false]], "construct_equilibrium_system() (in module pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.construct_equilibrium_system", false]], "contributions (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.contributions", false]], "contributions (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.contributions", false]], "converged (pycalphad.core.solver.solverresult attribute)": [[5, "pycalphad.core.solver.SolverResult.converged", false]], "coords (pycalphad.core.light_dataset.lightdataset attribute)": [[5, "pycalphad.core.light_dataset.LightDataset.coords", false]], "cp_coefficients (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.CP_coefficients", false]], "cpm (pycalphad.model.model property)": [[3, "pycalphad.model.Model.CPM", false]], "cpm (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.CPM", false]], "cpm_mix (pycalphad.model.model property)": [[3, "pycalphad.model.Model.CPM_MIX", false]], "cpm_mix (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.CPM_MIX", false]], "curie_temperature (pycalphad.io.cs_dat.endmembermagnetic attribute)": [[6, "pycalphad.io.cs_dat.EndmemberMagnetic.curie_temperature", false]], "curie_temperature (pycalphad.io.cs_dat.excessrkmmagnetic attribute)": [[6, "pycalphad.io.cs_dat.ExcessRKMMagnetic.curie_temperature", false]], "curie_temperature (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.curie_temperature", false]], "curie_temperature (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.curie_temperature", false]], "data_vars (pycalphad.core.light_dataset.lightdataset attribute)": [[5, "pycalphad.core.light_dataset.LightDataset.data_vars", false]], "database (class in pycalphad.io.database)": [[6, "pycalphad.io.database.Database", false]], "databaseexporterror": [[6, "pycalphad.io.database.DatabaseExportError", false]], "databaseformat (class in pycalphad.io.database)": [[6, "pycalphad.io.database.DatabaseFormat", false]], "degree_of_ordering (pycalphad.model.model property)": [[3, "pycalphad.model.Model.degree_of_ordering", false]], "degree_of_ordering (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.degree_of_ordering", false]], "dipole_moment (pycalphad.io.cs_dat.endmemberrealgas attribute)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.dipole_moment", false]], "dof (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.dof", false]], "doferror": [[5, "pycalphad.core.errors.DofError", false]], "doo (pycalphad.model.model property)": [[3, "pycalphad.model.Model.DOO", false]], "doo (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.DOO", false]], "doprint() (pycalphad.io.tdb.tcprinter method)": [[6, "pycalphad.io.tdb.TCPrinter.doprint", false]], "einstein_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.einstein_energy", false]], "elements (pycalphad.io.database.database attribute)": [[6, "pycalphad.io.database.Database.elements", false]], "endmember (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Endmember", false]], "endmember_constituent_idxs (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.endmember_constituent_idxs", false]], "endmember_matrix() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.endmember_matrix", false]], "endmember_reference_model (pycalphad.model.model property)": [[3, "pycalphad.model.Model.endmember_reference_model", false]], "endmemberaqueous (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.EndmemberAqueous", false]], "endmembermagnetic (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.EndmemberMagnetic", false]], "endmemberqkto (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.EndmemberQKTO", false]], "endmemberrealgas (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas", false]], "endmembers (pycalphad.io.cs_dat.phase_aqueous attribute)": [[6, "pycalphad.io.cs_dat.Phase_Aqueous.endmembers", false]], "endmembers (pycalphad.io.cs_dat.phase_realgas attribute)": [[6, "pycalphad.io.cs_dat.Phase_RealGas.endmembers", false]], "endmembers (pycalphad.io.cs_dat.phasebase attribute)": [[6, "pycalphad.io.cs_dat.PhaseBase.endmembers", false]], "energy (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.energy", false]], "energy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.energy", false]], "energy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.energy", false]], "enthalpy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.enthalpy", false]], "enthalpy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.enthalpy", false]], "entropy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.entropy", false]], "entropy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.entropy", false]], "eqplot() (in module pycalphad.plot.eqplot)": [[8, "pycalphad.plot.eqplot.eqplot", false]], "equilibrium() (in module pycalphad.core.equilibrium)": [[5, "pycalphad.core.equilibrium.equilibrium", false]], "equilibriumerror": [[5, "pycalphad.core.errors.EquilibriumError", false]], "escaped_name (pycalphad.variables.species property)": [[3, "pycalphad.variables.Species.escaped_name", false]], "excess_coefficient_idxs (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.excess_coefficient_idxs", false]], "excess_coeffs (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.excess_coeffs", false]], "excess_mixing_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.excess_mixing_energy", false]], "excess_mixing_energy() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.excess_mixing_energy", false]], "excess_parameters (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.excess_parameters", false]], "excess_parameters (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.excess_parameters", false]], "excessbase (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.ExcessBase", false]], "excessqkto (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.ExcessQKTO", false]], "excessrkm (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.ExcessRKM", false]], "excessrkmmagnetic (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.ExcessRKMMagnetic", false]], "expand_keyword() (in module pycalphad.io.tdb_keywords)": [[6, "pycalphad.io.tdb_keywords.expand_keyword", false]], "exponent (pycalphad.io.cs_dat.additionalcoefficientpair attribute)": [[6, "pycalphad.io.cs_dat.AdditionalCoefficientPair.exponent", false]], "exponents (pycalphad.io.cs_dat.excessqkto attribute)": [[6, "pycalphad.io.cs_dat.ExcessQKTO.exponents", false]], "expr() (pycalphad.io.cs_dat.additionalcoefficientpair method)": [[6, "pycalphad.io.cs_dat.AdditionalCoefficientPair.expr", false]], "expr() (pycalphad.io.cs_dat.endmember method)": [[6, "pycalphad.io.cs_dat.Endmember.expr", false]], "expr() (pycalphad.io.cs_dat.excessqkto method)": [[6, "pycalphad.io.cs_dat.ExcessQKTO.expr", false]], "expr() (pycalphad.io.cs_dat.excessrkm method)": [[6, "pycalphad.io.cs_dat.ExcessRKM.expr", false]], "expr() (pycalphad.io.cs_dat.intervalbase method)": [[6, "pycalphad.io.cs_dat.IntervalBase.expr", false]], "expr() (pycalphad.io.cs_dat.intervalcp method)": [[6, "pycalphad.io.cs_dat.IntervalCP.expr", false]], "expr() (pycalphad.io.cs_dat.intervalg method)": [[6, "pycalphad.io.cs_dat.IntervalG.expr", false]], "expr() (pycalphad.io.cs_dat.subqexcessquadruplet method)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.expr", false]], "expr_cond_pair() (pycalphad.io.cs_dat.intervalbase method)": [[6, "pycalphad.io.cs_dat.IntervalBase.expr_cond_pair", false]], "extract_parameters() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.extract_parameters", false]], "extrapolate_temperature_bounds (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.extrapolate_temperature_bounds", false]], "fastfunction (class in pycalphad.core.phase_rec)": [[5, "pycalphad.core.phase_rec.FastFunction", false]], "fhash() (in module pycalphad.core.cache)": [[5, "pycalphad.core.cache.fhash", false]], "filter_phases() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.filter_phases", false]], "find_two_phase_region_compsets() (in module pycalphad.plot.binary.compsets)": [[9, "pycalphad.plot.binary.compsets.find_two_phase_region_compsets", false]], "fixed (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.fixed", false]], "fixed_statevars (pycalphad.model.referencestate attribute)": [[3, "pycalphad.model.ReferenceState.fixed_statevars", false]], "formulaenergy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.formulaenergy", false]], "formulagfunc_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulagfunc_", false]], "formulagrad() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulagrad", false]], "formulahess() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulahess", false]], "formulahfunc_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulahfunc_", false]], "formulamole_grad() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamole_grad", false]], "formulamole_hess() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamole_hess", false]], "formulamole_obj() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamole_obj", false]], "formulamolefuncs_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamolefuncs_", false]], "formulamolegradfuncs_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamolegradfuncs_", false]], "formulamolehessianfuncs_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulamolehessianfuncs_", false]], "formulaobj() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulaobj", false]], "formulaofunc_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.formulaofunc_", false]], "from_dataset_vertices() (pycalphad.plot.binary.compsets.binarycompset class method)": [[9, "pycalphad.plot.binary.compsets.BinaryCompset.from_dataset_vertices", false]], "from_file() (pycalphad.io.database.database static method)": [[6, "pycalphad.io.database.Database.from_file", false]], "from_string() (pycalphad.io.database.database class method)": [[6, "pycalphad.io.database.Database.from_string", false]], "func (pycalphad.codegen.sympydiff_utils.buildfunctionsresult attribute)": [[4, "pycalphad.codegen.sympydiff_utils.BuildFunctionsResult.func", false]], "g (pycalphad.model.model property)": [[3, "pycalphad.model.Model.G", false]], "g (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.G", false]], "generate_dof() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.generate_dof", false]], "generate_symmetric_group() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.generate_symmetric_group", false]], "get_compsets() (in module pycalphad.plot.binary.compsets)": [[9, "pycalphad.plot.binary.compsets.get_compsets", false]], "get_dataset() (pycalphad.core.light_dataset.lightdataset method)": [[5, "pycalphad.core.light_dataset.LightDataset.get_dataset", false]], "get_internal_constraints() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.get_internal_constraints", false]], "get_internal_constraints() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.get_internal_constraints", false]], "get_line_plot_boundaries() (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.get_line_plot_boundaries", false]], "get_mass_fractions() (in module pycalphad.variables)": [[3, "pycalphad.variables.get_mass_fractions", false]], "get_mole_fractions() (in module pycalphad.variables)": [[3, "pycalphad.variables.get_mole_fractions", false]], "get_new_state() (pycalphad.core.minimizer.systemspecification method)": [[5, "pycalphad.core.minimizer.SystemSpecification.get_new_state", false]], "get_phases() (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.get_phases", false]], "get_pure_elements() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.get_pure_elements", false]], "get_scatter_plot_boundaries() (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.get_scatter_plot_boundaries", false]], "get_state_variables() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.get_state_variables", false]], "get_system_spec() (pycalphad.core.solver.solver method)": [[5, "pycalphad.core.solver.Solver.get_system_spec", false]], "gibbs_coefficient_idxs (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.gibbs_coefficient_idxs", false]], "gibbs_eq_type (pycalphad.io.cs_dat.endmember attribute)": [[6, "pycalphad.io.cs_dat.Endmember.gibbs_eq_type", false]], "global_min_is_possible() (in module pycalphad.core.starting_point)": [[5, "pycalphad.core.starting_point.global_min_is_possible", false]], "gm (pycalphad.model.model property)": [[3, "pycalphad.model.Model.GM", false]], "gm (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.GM", false]], "gm_mix (pycalphad.model.model property)": [[3, "pycalphad.model.Model.GM_MIX", false]], "gm_mix (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.GM_MIX", false]], "grad (pycalphad.codegen.sympydiff_utils.buildfunctionsresult attribute)": [[4, "pycalphad.codegen.sympydiff_utils.BuildFunctionsResult.grad", false]], "gradient (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.gradient", false]], "h298 (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.H298", false]], "h_trans (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.H_trans", false]], "halton() (in module pycalphad.core.halton)": [[5, "pycalphad.core.halton.halton", false]], "header (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Header", false]], "heat_capacity (pycalphad.model.model property)": [[3, "pycalphad.model.Model.heat_capacity", false]], "heat_capacity (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.heat_capacity", false]], "hess (pycalphad.codegen.sympydiff_utils.buildfunctionsresult attribute)": [[4, "pycalphad.codegen.sympydiff_utils.BuildFunctionsResult.hess", false]], "hm (pycalphad.model.model property)": [[3, "pycalphad.model.Model.HM", false]], "hm (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.HM", false]], "hm_mix (pycalphad.model.model property)": [[3, "pycalphad.model.Model.HM_MIX", false]], "hm_mix (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.HM_MIX", false]], "hr_point_sample() (in module pycalphad.core.calculate)": [[5, "pycalphad.core.calculate.hr_point_sample", false]], "hyperplane() (in module pycalphad.core.hyperplane)": [[5, "pycalphad.core.hyperplane.hyperplane", false]], "ideal_mixing_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.ideal_mixing_energy", false]], "ideal_mixing_energy() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.ideal_mixing_energy", false]], "ignore_convergence (pycalphad.core.solver.solverbase attribute)": [[5, "pycalphad.core.solver.SolverBase.ignore_convergence", false]], "indep_comp_cond (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.indep_comp_cond", false]], "insert() (pycalphad.io.cs_dat.endmember method)": [[6, "pycalphad.io.cs_dat.Endmember.insert", false]], "insert() (pycalphad.io.cs_dat.endmemberaqueous method)": [[6, "pycalphad.io.cs_dat.EndmemberAqueous.insert", false]], "insert() (pycalphad.io.cs_dat.endmembermagnetic method)": [[6, "pycalphad.io.cs_dat.EndmemberMagnetic.insert", false]], "insert() (pycalphad.io.cs_dat.endmemberqkto method)": [[6, "pycalphad.io.cs_dat.EndmemberQKTO.insert", false]], "insert() (pycalphad.io.cs_dat.endmemberrealgas method)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.insert", false]], "insert() (pycalphad.io.cs_dat.excessbase method)": [[6, "pycalphad.io.cs_dat.ExcessBase.insert", false]], "insert() (pycalphad.io.cs_dat.excessqkto method)": [[6, "pycalphad.io.cs_dat.ExcessQKTO.insert", false]], "insert() (pycalphad.io.cs_dat.excessrkm method)": [[6, "pycalphad.io.cs_dat.ExcessRKM.insert", false]], "insert() (pycalphad.io.cs_dat.excessrkmmagnetic method)": [[6, "pycalphad.io.cs_dat.ExcessRKMMagnetic.insert", false]], "insert() (pycalphad.io.cs_dat.phase_cef method)": [[6, "pycalphad.io.cs_dat.Phase_CEF.insert", false]], "insert() (pycalphad.io.cs_dat.phase_stoichiometric method)": [[6, "pycalphad.io.cs_dat.Phase_Stoichiometric.insert", false]], "insert() (pycalphad.io.cs_dat.phase_subq method)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.insert", false]], "insert() (pycalphad.io.cs_dat.phasebase method)": [[6, "pycalphad.io.cs_dat.PhaseBase.insert", false]], "insert() (pycalphad.io.cs_dat.subqexcessquadruplet method)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.insert", false]], "insert() (pycalphad.io.cs_dat.subqpair method)": [[6, "pycalphad.io.cs_dat.SUBQPair.insert", false]], "insert() (pycalphad.io.cs_dat.subqquadrupletcoordinations method)": [[6, "pycalphad.io.cs_dat.SUBQQuadrupletCoordinations.insert", false]], "instantiate_models() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.instantiate_models", false]], "interacting_species_idxs (pycalphad.io.cs_dat.excessbase attribute)": [[6, "pycalphad.io.cs_dat.ExcessBase.interacting_species_idxs", false]], "internal_cons_func (pycalphad.core.constraints.constrainttuple attribute)": [[5, "pycalphad.core.constraints.ConstraintTuple.internal_cons_func", false]], "internal_cons_func() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_func", false]], "internal_cons_func_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_func_", false]], "internal_cons_hess (pycalphad.core.constraints.constrainttuple attribute)": [[5, "pycalphad.core.constraints.ConstraintTuple.internal_cons_hess", false]], "internal_cons_hess() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_hess", false]], "internal_cons_hess_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_hess_", false]], "internal_cons_jac (pycalphad.core.constraints.constrainttuple attribute)": [[5, "pycalphad.core.constraints.ConstraintTuple.internal_cons_jac", false]], "internal_cons_jac() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_jac", false]], "internal_cons_jac_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.internal_cons_jac_", false]], "intervalbase (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.IntervalBase", false]], "intervalcp (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.IntervalCP", false]], "intervalg (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.IntervalG", false]], "intervals (pycalphad.io.cs_dat.endmember attribute)": [[6, "pycalphad.io.cs_dat.Endmember.intervals", false]], "kohler_toop_excess_sum() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.kohler_toop_excess_sum", false]], "lightdataset (class in pycalphad.core.light_dataset)": [[5, "pycalphad.core.light_dataset.LightDataset", false]], "list_soln_species_count (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.list_soln_species_count", false]], "lower_convex_hull() (in module pycalphad.core.lower_convex_hull)": [[5, "pycalphad.core.lower_convex_hull.lower_convex_hull", false]], "lru_cache() (in module pycalphad.core.cache)": [[5, "pycalphad.core.cache.lru_cache", false]], "magnetic_afm_factor (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.magnetic_afm_factor", false]], "magnetic_afm_factor (pycalphad.io.cs_dat.phase_stoichiometric attribute)": [[6, "pycalphad.io.cs_dat.Phase_Stoichiometric.magnetic_afm_factor", false]], "magnetic_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.magnetic_energy", false]], "magnetic_moment (pycalphad.io.cs_dat.endmembermagnetic attribute)": [[6, "pycalphad.io.cs_dat.EndmemberMagnetic.magnetic_moment", false]], "magnetic_moment (pycalphad.io.cs_dat.excessrkmmagnetic attribute)": [[6, "pycalphad.io.cs_dat.ExcessRKMMagnetic.magnetic_moment", false]], "magnetic_structure_factor (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.magnetic_structure_factor", false]], "magnetic_structure_factor (pycalphad.io.cs_dat.phase_stoichiometric attribute)": [[6, "pycalphad.io.cs_dat.Phase_Stoichiometric.magnetic_structure_factor", false]], "map_binary() (in module pycalphad.plot.binary.map)": [[9, "pycalphad.plot.binary.map.map_binary", false]], "mass_obj() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.mass_obj", false]], "mass_obj_2d() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.mass_obj_2d", false]], "massfraction (class in pycalphad.variables)": [[3, "pycalphad.variables.MassFraction", false]], "massfuncs_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.massfuncs_", false]], "max_composition (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.max_composition", false]], "mean_composition (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.mean_composition", false]], "merge() (pycalphad.core.light_dataset.lightdataset method)": [[5, "pycalphad.core.light_dataset.LightDataset.merge", false]], "metadata (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.metadata", false]], "min_composition (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.min_composition", false]], "mixing_code (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.mixing_code", false]], "mixing_const (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.mixing_const", false]], "mixing_energy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.mixing_energy", false]], "mixing_energy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.mixing_energy", false]], "mixing_enthalpy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.mixing_enthalpy", false]], "mixing_enthalpy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.mixing_enthalpy", false]], "mixing_entropy (pycalphad.model.model property)": [[3, "pycalphad.model.Model.mixing_entropy", false]], "mixing_entropy (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.mixing_entropy", false]], "mixing_exponents (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.mixing_exponents", false]], "mixing_heat_capacity (pycalphad.model.model property)": [[3, "pycalphad.model.Model.mixing_heat_capacity", false]], "mixing_heat_capacity (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.mixing_heat_capacity", false]], "mixing_type (pycalphad.io.cs_dat.subqexcessquadruplet attribute)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet.mixing_type", false]], "model (class in pycalphad.model)": [[3, "pycalphad.model.Model", false]], "model_hints (pycalphad.io.database.phase attribute)": [[6, "pycalphad.io.database.Phase.model_hints", false]], "modelmqmqa (class in pycalphad.models.model_mqmqa)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA", false]], "module": [[3, "module-pycalphad", false], [3, "module-pycalphad.model", false], [3, "module-pycalphad.variables", false], [4, "module-pycalphad.codegen", false], [4, "module-pycalphad.codegen.callables", false], [4, "module-pycalphad.codegen.sympydiff_utils", false], [5, "module-pycalphad.core", false], [5, "module-pycalphad.core.cache", false], [5, "module-pycalphad.core.calculate", false], [5, "module-pycalphad.core.cartesian", false], [5, "module-pycalphad.core.composition_set", false], [5, "module-pycalphad.core.constants", false], [5, "module-pycalphad.core.constraints", false], [5, "module-pycalphad.core.eqsolver", false], [5, "module-pycalphad.core.equilibrium", false], [5, "module-pycalphad.core.errors", false], [5, "module-pycalphad.core.halton", false], [5, "module-pycalphad.core.hyperplane", false], [5, "module-pycalphad.core.light_dataset", false], [5, "module-pycalphad.core.lower_convex_hull", false], [5, "module-pycalphad.core.minimizer", false], [5, "module-pycalphad.core.phase_rec", false], [5, "module-pycalphad.core.solver", false], [5, "module-pycalphad.core.starting_point", false], [5, "module-pycalphad.core.utils", false], [6, "module-pycalphad.io", false], [6, "module-pycalphad.io.cs_dat", false], [6, "module-pycalphad.io.database", false], [6, "module-pycalphad.io.grammar", false], [6, "module-pycalphad.io.tdb", false], [6, "module-pycalphad.io.tdb_keywords", false], [7, "module-pycalphad.models", false], [7, "module-pycalphad.models.model_mqmqa", false], [8, "module-pycalphad.plot", false], [8, "module-pycalphad.plot.eqplot", false], [8, "module-pycalphad.plot.ternary", false], [8, "module-pycalphad.plot.utils", false], [9, "module-pycalphad.plot.binary", false], [9, "module-pycalphad.plot.binary.compsets", false], [9, "module-pycalphad.plot.binary.map", false], [9, "module-pycalphad.plot.binary.plot", false], [9, "module-pycalphad.plot.binary.zpf_boundary_sets", false]], "molefraction (class in pycalphad.variables)": [[3, "pycalphad.variables.MoleFraction", false]], "moles() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.moles", false]], "moles() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.moles", false]], "mu (in module pycalphad.variables)": [[3, "pycalphad.variables.MU", false]], "name (pycalphad.io.database.phase attribute)": [[6, "pycalphad.io.database.Phase.name", false]], "name (pycalphad.variables.species attribute)": [[3, "pycalphad.variables.Species.name", false]], "neel_temperature (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.neel_temperature", false]], "neel_temperature (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.neel_temperature", false]], "nonvacant_elements (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.nonvacant_elements", false]], "normalization (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.normalization", false]], "np (in module pycalphad.variables)": [[3, "pycalphad.variables.NP", false]], "np (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.NP", false]], "nt (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.NT", false]], "nt (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.NT", false]], "num_internal_cons (pycalphad.core.constraints.constrainttuple attribute)": [[5, "pycalphad.core.constraints.ConstraintTuple.num_internal_cons", false]], "num_internal_cons (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.num_internal_cons", false]], "num_pairs (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.num_pairs", false]], "num_quadruplets (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.num_quadruplets", false]], "num_statevars (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.num_statevars", false]], "num_stoich_phases (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.num_stoich_phases", false]], "num_subl_1_const (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.num_subl_1_const", false]], "num_subl_2_const (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.num_subl_2_const", false]], "number_of_atoms (pycalphad.variables.species property)": [[3, "pycalphad.variables.Species.number_of_atoms", false]], "obj() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.obj", false]], "obj_2d() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.obj_2d", false]], "obj_parameters_2d() (pycalphad.core.phase_rec.phaserecord method)": [[5, "pycalphad.core.phase_rec.PhaseRecord.obj_parameters_2d", false]], "ofunc_ (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.ofunc_", false]], "pairwise_xdiscrepancy() (pycalphad.plot.binary.compsets.compsetpair method)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.pairwise_xdiscrepancy", false]], "parameter_order (pycalphad.io.cs_dat.excessrkm attribute)": [[6, "pycalphad.io.cs_dat.ExcessRKM.parameter_order", false]], "parameter_order (pycalphad.io.cs_dat.excessrkmmagnetic attribute)": [[6, "pycalphad.io.cs_dat.ExcessRKMMagnetic.parameter_order", false]], "parameters (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.parameters", false]], "parse() (pycalphad.io.cs_dat.tokenparser method)": [[6, "pycalphad.io.cs_dat.TokenParser.parse", false]], "parse_additional_terms() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_additional_terms", false]], "parse_chemical_formula() (in module pycalphad.io.grammar)": [[6, "pycalphad.io.grammar.parse_chemical_formula", false]], "parse_cs_dat() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_cs_dat", false]], "parse_endmember() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_endmember", false]], "parse_endmember_aqueous() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_endmember_aqueous", false]], "parse_endmember_qkto() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_endmember_qkto", false]], "parse_endmember_subq() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_endmember_subq", false]], "parse_excess_magnetic_parameters() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_excess_magnetic_parameters", false]], "parse_excess_parameters() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_excess_parameters", false]], "parse_excess_parameters_pitz() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_excess_parameters_pitz", false]], "parse_excess_qkto() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_excess_qkto", false]], "parse_header() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_header", false]], "parse_interval_gibbs() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_interval_Gibbs", false]], "parse_interval_heat_capacity() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_interval_heat_capacity", false]], "parse_phase() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_phase", false]], "parse_phase_aqueous() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_phase_aqueous", false]], "parse_phase_cef() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_phase_cef", false]], "parse_phase_real_gas() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_phase_real_gas", false]], "parse_phase_subq() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_phase_subq", false]], "parse_ptvm_terms() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_PTVm_terms", false]], "parse_quadruplet() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_quadruplet", false]], "parse_stoich_phase() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_stoich_phase", false]], "parse_subq_excess() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.parse_subq_excess", false]], "parseimpl() (pycalphad.io.tdb.tccommand method)": [[6, "pycalphad.io.tdb.TCCommand.parseImpl", false]], "parsen() (pycalphad.io.cs_dat.tokenparser method)": [[6, "pycalphad.io.cs_dat.TokenParser.parseN", false]], "pc (pycalphad.io.cs_dat.endmemberrealgas attribute)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.Pc", false]], "phase (class in pycalphad.io.database)": [[6, "pycalphad.io.database.Phase", false]], "phase_aqueous (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Phase_Aqueous", false]], "phase_cef (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Phase_CEF", false]], "phase_dof (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.phase_dof", false]], "phase_legend() (in module pycalphad.plot.utils)": [[8, "pycalphad.plot.utils.phase_legend", false]], "phase_name (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.phase_name", false]], "phase_name (pycalphad.io.cs_dat.phasebase attribute)": [[6, "pycalphad.io.cs_dat.PhaseBase.phase_name", false]], "phase_name (pycalphad.model.referencestate attribute)": [[3, "pycalphad.model.ReferenceState.phase_name", false]], "phase_realgas (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Phase_RealGas", false]], "phase_record (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.phase_record", false]], "phase_stoichiometric (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Phase_Stoichiometric", false]], "phase_subq (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ", false]], "phase_type (pycalphad.io.cs_dat.phasebase attribute)": [[6, "pycalphad.io.cs_dat.PhaseBase.phase_type", false]], "phasebase (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.PhaseBase", false]], "phasefraction (class in pycalphad.variables)": [[3, "pycalphad.variables.PhaseFraction", false]], "phaserecord (class in pycalphad.core.phase_rec)": [[5, "pycalphad.core.phase_rec.PhaseRecord", false]], "phases (pycalphad.io.database.database attribute)": [[6, "pycalphad.io.database.Database.phases", false]], "phases (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.phases", false]], "phases (pycalphad.plot.binary.zpf_boundary_sets.twophaseregion attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion.phases", false]], "plot_boundaries() (in module pycalphad.plot.binary.plot)": [[9, "pycalphad.plot.binary.plot.plot_boundaries", false]], "point_sample() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.point_sample", false]], "post_solve_hook() (pycalphad.core.minimizer.systemspecification method)": [[5, "pycalphad.core.minimizer.SystemSpecification.post_solve_hook", false]], "pre_solve_hook() (pycalphad.core.minimizer.systemspecification method)": [[5, "pycalphad.core.minimizer.SystemSpecification.pre_solve_hook", false]], "process_parameter_queue() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.process_parameter_queue", false]], "ptvm_terms (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.PTVm_terms", false]], "ptvm_terms (pycalphad.io.cs_dat.intervalg attribute)": [[6, "pycalphad.io.cs_dat.IntervalG.PTVm_terms", false]], "ptvmterms (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.PTVmTerms", false]], "pure_elements (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.pure_elements", false]], "pure_elements (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.pure_elements", false]], "pure_elements_mass (pycalphad.io.cs_dat.header attribute)": [[6, "pycalphad.io.cs_dat.Header.pure_elements_mass", false]], "pycalphad": [[3, "module-pycalphad", false]], "pycalphad.codegen": [[4, "module-pycalphad.codegen", false]], "pycalphad.codegen.callables": [[4, "module-pycalphad.codegen.callables", false]], "pycalphad.codegen.sympydiff_utils": [[4, "module-pycalphad.codegen.sympydiff_utils", false]], "pycalphad.core": [[5, "module-pycalphad.core", false]], "pycalphad.core.cache": [[5, "module-pycalphad.core.cache", false]], "pycalphad.core.calculate": [[5, "module-pycalphad.core.calculate", false]], "pycalphad.core.cartesian": [[5, "module-pycalphad.core.cartesian", false]], "pycalphad.core.composition_set": [[5, "module-pycalphad.core.composition_set", false]], "pycalphad.core.constants": [[5, "module-pycalphad.core.constants", false]], "pycalphad.core.constraints": [[5, "module-pycalphad.core.constraints", false]], "pycalphad.core.eqsolver": [[5, "module-pycalphad.core.eqsolver", false]], "pycalphad.core.equilibrium": [[5, "module-pycalphad.core.equilibrium", false]], "pycalphad.core.errors": [[5, "module-pycalphad.core.errors", false]], "pycalphad.core.halton": [[5, "module-pycalphad.core.halton", false]], "pycalphad.core.hyperplane": [[5, "module-pycalphad.core.hyperplane", false]], "pycalphad.core.light_dataset": [[5, "module-pycalphad.core.light_dataset", false]], "pycalphad.core.lower_convex_hull": [[5, "module-pycalphad.core.lower_convex_hull", false]], "pycalphad.core.minimizer": [[5, "module-pycalphad.core.minimizer", false]], "pycalphad.core.phase_rec": [[5, "module-pycalphad.core.phase_rec", false]], "pycalphad.core.solver": [[5, "module-pycalphad.core.solver", false]], "pycalphad.core.starting_point": [[5, "module-pycalphad.core.starting_point", false]], "pycalphad.core.utils": [[5, "module-pycalphad.core.utils", false]], "pycalphad.io": [[6, "module-pycalphad.io", false]], "pycalphad.io.cs_dat": [[6, "module-pycalphad.io.cs_dat", false]], "pycalphad.io.database": [[6, "module-pycalphad.io.database", false]], "pycalphad.io.grammar": [[6, "module-pycalphad.io.grammar", false]], "pycalphad.io.tdb": [[6, "module-pycalphad.io.tdb", false]], "pycalphad.io.tdb_keywords": [[6, "module-pycalphad.io.tdb_keywords", false]], "pycalphad.model": [[3, "module-pycalphad.model", false]], "pycalphad.models": [[7, "module-pycalphad.models", false]], "pycalphad.models.model_mqmqa": [[7, "module-pycalphad.models.model_mqmqa", false]], "pycalphad.plot": [[8, "module-pycalphad.plot", false]], "pycalphad.plot.binary": [[9, "module-pycalphad.plot.binary", false]], "pycalphad.plot.binary.compsets": [[9, "module-pycalphad.plot.binary.compsets", false]], "pycalphad.plot.binary.map": [[9, "module-pycalphad.plot.binary.map", false]], "pycalphad.plot.binary.plot": [[9, "module-pycalphad.plot.binary.plot", false]], "pycalphad.plot.binary.zpf_boundary_sets": [[9, "module-pycalphad.plot.binary.zpf_boundary_sets", false]], "pycalphad.plot.eqplot": [[8, "module-pycalphad.plot.eqplot", false]], "pycalphad.plot.ternary": [[8, "module-pycalphad.plot.ternary", false]], "pycalphad.plot.utils": [[8, "module-pycalphad.plot.utils", false]], "pycalphad.variables": [[3, "module-pycalphad.variables", false]], "quadruplet_coordinations (pycalphad.io.cs_dat.subqquadrupletcoordinations attribute)": [[6, "pycalphad.io.cs_dat.SUBQQuadrupletCoordinations.quadruplet_coordinations", false]], "quadruplet_idxs (pycalphad.io.cs_dat.subqquadrupletcoordinations attribute)": [[6, "pycalphad.io.cs_dat.SUBQQuadrupletCoordinations.quadruplet_idxs", false]], "quadruplets (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.quadruplets", false]], "read (pycalphad.io.database.databaseformat attribute)": [[6, "pycalphad.io.database.DatabaseFormat.read", false]], "read_cs_dat() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.read_cs_dat", false]], "read_tdb() (in module pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.read_tdb", false]], "rebuild_two_phase_regions() (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets method)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.rebuild_two_phase_regions", false]], "recursive_tuplify() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.recursive_tuplify", false]], "redlich_kister_sum() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.redlich_kister_sum", false]], "reference_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.reference_energy", false]], "reference_energy() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.reference_energy", false]], "reference_model (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.reference_model", false]], "references (pycalphad.io.database.database attribute)": [[6, "pycalphad.io.database.Database.references", false]], "referencestate (class in pycalphad.model)": [[3, "pycalphad.model.ReferenceState", false]], "reflow_text() (in module pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.reflow_text", false]], "register_format() (pycalphad.io.database.database static method)": [[6, "pycalphad.io.database.Database.register_format", false]], "remove() (pycalphad.core.light_dataset.lightdataset method)": [[5, "pycalphad.core.light_dataset.LightDataset.remove", false]], "rename_element_charge() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.rename_element_charge", false]], "run_loop() (pycalphad.core.minimizer.systemspecification method)": [[5, "pycalphad.core.minimizer.SystemSpecification.run_loop", false]], "s298 (pycalphad.io.cs_dat.intervalcp attribute)": [[6, "pycalphad.io.cs_dat.IntervalCP.S298", false]], "same_phase (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.same_phase", false]], "search() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.search", false]], "shift_reference_state() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.shift_reference_state", false]], "shift_reference_state() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.shift_reference_state", false]], "site_frac_atol (pycalphad.plot.binary.compsets.binarycompset attribute)": [[9, "pycalphad.plot.binary.compsets.BinaryCompset.SITE_FRAC_ATOL", false]], "site_fraction (in module pycalphad.variables)": [[3, "pycalphad.variables.site_fraction", false]], "site_fractions (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.site_fractions", false]], "sitefraction (class in pycalphad.variables)": [[3, "pycalphad.variables.SiteFraction", false]], "sizeof_fmt() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.sizeof_fmt", false]], "sm (pycalphad.model.model property)": [[3, "pycalphad.model.Model.SM", false]], "sm (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.SM", false]], "sm_mix (pycalphad.model.model property)": [[3, "pycalphad.model.Model.SM_MIX", false]], "sm_mix (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.SM_MIX", false]], "solve() (pycalphad.core.solver.solver method)": [[5, "pycalphad.core.solver.Solver.solve", false]], "solve() (pycalphad.core.solver.solverbase method)": [[5, "pycalphad.core.solver.SolverBase.solve", false]], "solve_state() (in module pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.solve_state", false]], "solver (class in pycalphad.core.solver)": [[5, "pycalphad.core.solver.Solver", false]], "solverbase (class in pycalphad.core.solver)": [[5, "pycalphad.core.solver.SolverBase", false]], "solverresult (class in pycalphad.core.solver)": [[5, "pycalphad.core.solver.SolverResult", false]], "species (class in pycalphad.variables)": [[3, "pycalphad.variables.Species", false]], "species (pycalphad.io.database.database attribute)": [[6, "pycalphad.io.database.Database.species", false]], "species (pycalphad.model.referencestate attribute)": [[3, "pycalphad.model.ReferenceState.species", false]], "species() (pycalphad.io.cs_dat.endmember method)": [[6, "pycalphad.io.cs_dat.Endmember.species", false]], "species_name (pycalphad.io.cs_dat.endmember attribute)": [[6, "pycalphad.io.cs_dat.Endmember.species_name", false]], "starting_point() (in module pycalphad.core.starting_point)": [[5, "pycalphad.core.starting_point.starting_point", false]], "state_variables (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.state_variables", false]], "state_variables (pycalphad.models.model_mqmqa.modelmqmqa property)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.state_variables", false]], "statevariable (class in pycalphad.variables)": [[3, "pycalphad.variables.StateVariable", false]], "stoichiometric_factor (pycalphad.io.cs_dat.endmemberqkto attribute)": [[6, "pycalphad.io.cs_dat.EndmemberQKTO.stoichiometric_factor", false]], "stoichiometry_pure_elements (pycalphad.io.cs_dat.endmember attribute)": [[6, "pycalphad.io.cs_dat.Endmember.stoichiometry_pure_elements", false]], "stoichiometry_quadruplet (pycalphad.io.cs_dat.subqpair attribute)": [[6, "pycalphad.io.cs_dat.SUBQPair.stoichiometry_quadruplet", false]], "subl_1_charges (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_1_charges", false]], "subl_1_chemical_groups (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_1_chemical_groups", false]], "subl_1_const (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_1_const", false]], "subl_2_charges (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_2_charges", false]], "subl_2_chemical_groups (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_2_chemical_groups", false]], "subl_2_const (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_2_const", false]], "subl_const_idx_pairs (pycalphad.io.cs_dat.phase_subq attribute)": [[6, "pycalphad.io.cs_dat.Phase_SUBQ.subl_const_idx_pairs", false]], "subl_ratios (pycalphad.io.cs_dat.phase_cef attribute)": [[6, "pycalphad.io.cs_dat.Phase_CEF.subl_ratios", false]], "sublattices (pycalphad.io.database.phase attribute)": [[6, "pycalphad.io.database.Phase.sublattices", false]], "subqexcessquadruplet (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.SUBQExcessQuadruplet", false]], "subqpair (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.SUBQPair", false]], "subqquadrupletcoordinations (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.SUBQQuadrupletCoordinations", false]], "symbol_replace() (pycalphad.model.model class method)": [[3, "pycalphad.model.Model.symbol_replace", false]], "symbol_replace() (pycalphad.models.model_mqmqa.modelmqmqa static method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.symbol_replace", false]], "symbols (pycalphad.io.database.database attribute)": [[6, "pycalphad.io.database.Database.symbols", false]], "systemspecification (class in pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.SystemSpecification", false]], "systemstate (class in pycalphad.core.minimizer)": [[5, "pycalphad.core.minimizer.SystemState", false]], "t_max (pycalphad.io.cs_dat.intervalbase attribute)": [[6, "pycalphad.io.cs_dat.IntervalBase.T_max", false]], "tc (pycalphad.io.cs_dat.endmemberrealgas attribute)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.Tc", false]], "tc (pycalphad.model.model attribute)": [[3, "pycalphad.model.Model.TC", false]], "tc (pycalphad.models.model_mqmqa.modelmqmqa attribute)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.TC", false]], "tccommand (class in pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.TCCommand", false]], "tcprinter (class in pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.TCPrinter", false]], "tdiscrepancy() (pycalphad.plot.binary.compsets.compsetpair method)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.Tdiscrepancy", false]], "temperature (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.temperature", false]], "temperature_atol (pycalphad.plot.binary.compsets.binarycompset attribute)": [[9, "pycalphad.plot.binary.compsets.BinaryCompset.TEMPERATURE_ATOL", false]], "terms (pycalphad.io.cs_dat.ptvmterms attribute)": [[6, "pycalphad.io.cs_dat.PTVmTerms.terms", false]], "ternplot() (in module pycalphad.plot.ternary)": [[8, "pycalphad.plot.ternary.ternplot", false]], "testmodel (class in pycalphad.model)": [[3, "pycalphad.model.TestModel", false]], "to_file() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.to_file", false]], "to_interval() (in module pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.to_interval", false]], "to_string() (pycalphad.io.database.database method)": [[6, "pycalphad.io.database.Database.to_string", false]], "tokenize() (in module pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.tokenize", false]], "tokenparser (class in pycalphad.io.cs_dat)": [[6, "pycalphad.io.cs_dat.TokenParser", false]], "tokenparsererror": [[6, "pycalphad.io.cs_dat.TokenParserError", false]], "two_phase_regions (pycalphad.plot.binary.zpf_boundary_sets.zpfboundarysets attribute)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets.two_phase_regions", false]], "twophaseregion (class in pycalphad.plot.binary.zpf_boundary_sets)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion", false]], "twostate_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.twostate_energy", false]], "unique_phases (pycalphad.plot.binary.compsets.compsetpair attribute)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.unique_phases", false]], "unpack_components() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.unpack_components", false]], "unpack_condition() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.unpack_condition", false]], "unpack_kwarg() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.unpack_kwarg", false]], "unpack_phases() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.unpack_phases", false]], "unwrap_piecewise() (pycalphad.model.model class method)": [[3, "pycalphad.model.Model.unwrap_piecewise", false]], "update() (pycalphad.core.composition_set.compositionset method)": [[5, "pycalphad.core.composition_set.CompositionSet.update", false]], "variables (pycalphad.core.phase_rec.phaserecord attribute)": [[5, "pycalphad.core.phase_rec.PhaseRecord.variables", false]], "variables (pycalphad.model.model property)": [[3, "pycalphad.model.Model.variables", false]], "vc (pycalphad.io.cs_dat.endmemberrealgas attribute)": [[6, "pycalphad.io.cs_dat.EndmemberRealGas.Vc", false]], "volume_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.volume_energy", false]], "w (in module pycalphad.variables)": [[3, "pycalphad.variables.W", false]], "weight (pycalphad.variables.species property)": [[3, "pycalphad.variables.Species.weight", false]], "wrap_symbol() (in module pycalphad.core.utils)": [[5, "pycalphad.core.utils.wrap_symbol", false]], "write (pycalphad.io.database.databaseformat attribute)": [[6, "pycalphad.io.database.DatabaseFormat.write", false]], "write_tdb() (in module pycalphad.io.tdb)": [[6, "pycalphad.io.tdb.write_tdb", false]], "x (in module pycalphad.variables)": [[3, "pycalphad.variables.X", false]], "x (pycalphad.core.composition_set.compositionset attribute)": [[5, "pycalphad.core.composition_set.CompositionSet.X", false]], "x (pycalphad.core.solver.solverresult attribute)": [[5, "pycalphad.core.solver.SolverResult.x", false]], "xdiscrepancy() (pycalphad.plot.binary.compsets.compsetpair method)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.xdiscrepancy", false]], "xiong_magnetic_energy() (pycalphad.model.model method)": [[3, "pycalphad.model.Model.xiong_magnetic_energy", false]], "y (in module pycalphad.variables)": [[3, "pycalphad.variables.Y", false]], "ydiscrepancy() (pycalphad.plot.binary.compsets.compsetpair method)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.ydiscrepancy", false]], "ydiscrepancy_max() (pycalphad.plot.binary.compsets.compsetpair method)": [[9, "pycalphad.plot.binary.compsets.CompsetPair.ydiscrepancy_max", false]], "z() (pycalphad.models.model_mqmqa.modelmqmqa method)": [[7, "pycalphad.models.model_mqmqa.ModelMQMQA.Z", false]], "zeta (pycalphad.io.cs_dat.subqpair attribute)": [[6, "pycalphad.io.cs_dat.SUBQPair.zeta", false]], "zpfboundarysets (class in pycalphad.plot.binary.zpf_boundary_sets)": [[9, "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets", false]]}, "objects": {"": [[3, 0, 0, "-", "pycalphad"]], "pycalphad": [[4, 0, 0, "-", "codegen"], [5, 0, 0, "-", "core"], [6, 0, 0, "-", "io"], [3, 0, 0, "-", "model"], [7, 0, 0, "-", "models"], [8, 0, 0, "-", "plot"], [3, 0, 0, "-", "variables"]], "pycalphad.codegen": [[4, 0, 0, "-", "callables"], [4, 0, 0, "-", "sympydiff_utils"]], "pycalphad.codegen.callables": [[4, 1, 1, "", "build_callables"], [4, 1, 1, "", "build_phase_records"]], "pycalphad.codegen.sympydiff_utils": [[4, 2, 1, "", "BuildFunctionsResult"], [4, 2, 1, "", "ConstraintFunctions"], [4, 1, 1, "", "build_constraint_functions"], [4, 1, 1, "", "build_functions"]], "pycalphad.codegen.sympydiff_utils.BuildFunctionsResult": [[4, 3, 1, "", "func"], [4, 3, 1, "", "grad"], [4, 3, 1, "", "hess"]], "pycalphad.codegen.sympydiff_utils.ConstraintFunctions": [[4, 3, 1, "", "cons_func"], [4, 3, 1, "", "cons_hess"], [4, 3, 1, "", "cons_jac"]], "pycalphad.core": [[5, 0, 0, "-", "cache"], [5, 0, 0, "-", "calculate"], [5, 0, 0, "-", "cartesian"], [5, 0, 0, "-", "composition_set"], [5, 0, 0, "-", "constants"], [5, 0, 0, "-", "constraints"], [5, 0, 0, "-", "eqsolver"], [5, 0, 0, "-", "equilibrium"], [5, 0, 0, "-", "errors"], [5, 0, 0, "-", "halton"], [5, 0, 0, "-", "hyperplane"], [5, 0, 0, "-", "light_dataset"], [5, 0, 0, "-", "lower_convex_hull"], [5, 0, 0, "-", "minimizer"], [5, 0, 0, "-", "phase_rec"], [5, 0, 0, "-", "solver"], [5, 0, 0, "-", "starting_point"], [5, 0, 0, "-", "utils"]], "pycalphad.core.cache": [[5, 1, 1, "", "cacheit"], [5, 1, 1, "", "fhash"], [5, 1, 1, "", "lru_cache"]], "pycalphad.core.calculate": [[5, 1, 1, "", "calculate"], [5, 1, 1, "", "hr_point_sample"]], "pycalphad.core.cartesian": [[5, 1, 1, "", "cartesian"]], "pycalphad.core.composition_set": [[5, 2, 1, "", "CompositionSet"]], "pycalphad.core.composition_set.CompositionSet": [[5, 3, 1, "", "NP"], [5, 3, 1, "", "X"], [5, 3, 1, "", "dof"], [5, 3, 1, "", "energy"], [5, 3, 1, "", "fixed"], [5, 3, 1, "", "phase_record"], [5, 4, 1, "", "update"]], "pycalphad.core.constraints": [[5, 2, 1, "", "ConstraintTuple"], [5, 1, 1, "", "build_constraints"]], "pycalphad.core.constraints.ConstraintTuple": [[5, 3, 1, "", "internal_cons_func"], [5, 3, 1, "", "internal_cons_hess"], [5, 3, 1, "", "internal_cons_jac"], [5, 3, 1, "", "num_internal_cons"]], "pycalphad.core.eqsolver": [[5, 1, 1, "", "add_nearly_stable"]], "pycalphad.core.equilibrium": [[5, 1, 1, "", "equilibrium"]], "pycalphad.core.errors": [[5, 5, 1, "", "CalculateError"], [5, 5, 1, "", "ConditionError"], [5, 5, 1, "", "DofError"], [5, 5, 1, "", "EquilibriumError"]], "pycalphad.core.halton": [[5, 1, 1, "", "halton"]], "pycalphad.core.hyperplane": [[5, 1, 1, "", "hyperplane"]], "pycalphad.core.light_dataset": [[5, 2, 1, "", "LightDataset"]], "pycalphad.core.light_dataset.LightDataset": [[5, 4, 1, "", "add_variable"], [5, 3, 1, "", "attrs"], [5, 3, 1, "", "coords"], [5, 3, 1, "", "data_vars"], [5, 4, 1, "", "get_dataset"], [5, 4, 1, "", "merge"], [5, 4, 1, "", "remove"]], "pycalphad.core.lower_convex_hull": [[5, 1, 1, "", "lower_convex_hull"]], "pycalphad.core.minimizer": [[5, 2, 1, "", "CompsetState"], [5, 2, 1, "", "SystemSpecification"], [5, 2, 1, "", "SystemState"], [5, 1, 1, "", "advance_state"], [5, 1, 1, "", "construct_equilibrium_system"], [5, 1, 1, "", "solve_state"]], "pycalphad.core.minimizer.SystemSpecification": [[5, 4, 1, "", "check_convergence"], [5, 4, 1, "", "get_new_state"], [5, 4, 1, "", "post_solve_hook"], [5, 4, 1, "", "pre_solve_hook"], [5, 4, 1, "", "run_loop"]], "pycalphad.core.minimizer.SystemState": [[5, 3, 1, "", "chemical_potentials"]], "pycalphad.core.phase_rec": [[5, 2, 1, "", "FastFunction"], [5, 2, 1, "", "PhaseRecord"]], "pycalphad.core.phase_rec.PhaseRecord": [[5, 3, 1, "", "components"], [5, 3, 1, "", "formulagfunc_"], [5, 4, 1, "", "formulagrad"], [5, 4, 1, "", "formulahess"], [5, 3, 1, "", "formulahfunc_"], [5, 4, 1, "", "formulamole_grad"], [5, 4, 1, "", "formulamole_hess"], [5, 4, 1, "", "formulamole_obj"], [5, 3, 1, "", "formulamolefuncs_"], [5, 3, 1, "", "formulamolegradfuncs_"], [5, 3, 1, "", "formulamolehessianfuncs_"], [5, 4, 1, "", "formulaobj"], [5, 3, 1, "", "formulaofunc_"], [5, 4, 1, "", "internal_cons_func"], [5, 3, 1, "", "internal_cons_func_"], [5, 4, 1, "", "internal_cons_hess"], [5, 3, 1, "", "internal_cons_hess_"], [5, 4, 1, "", "internal_cons_jac"], [5, 3, 1, "", "internal_cons_jac_"], [5, 4, 1, "", "mass_obj"], [5, 4, 1, "", "mass_obj_2d"], [5, 3, 1, "", "massfuncs_"], [5, 3, 1, "", "nonvacant_elements"], [5, 3, 1, "", "num_internal_cons"], [5, 3, 1, "", "num_statevars"], [5, 4, 1, "", "obj"], [5, 4, 1, "", "obj_2d"], [5, 4, 1, "", "obj_parameters_2d"], [5, 3, 1, "", "ofunc_"], [5, 3, 1, "", "parameters"], [5, 3, 1, "", "phase_dof"], [5, 3, 1, "", "phase_name"], [5, 3, 1, "", "pure_elements"], [5, 3, 1, "", "state_variables"], [5, 3, 1, "", "variables"]], "pycalphad.core.solver": [[5, 2, 1, "", "Solver"], [5, 2, 1, "", "SolverBase"], [5, 2, 1, "", "SolverResult"]], "pycalphad.core.solver.Solver": [[5, 4, 1, "", "get_system_spec"], [5, 4, 1, "", "solve"]], "pycalphad.core.solver.SolverBase": [[5, 3, 1, "", "ignore_convergence"], [5, 4, 1, "", "solve"]], "pycalphad.core.solver.SolverResult": [[5, 3, 1, "", "chemical_potentials"], [5, 3, 1, "", "converged"], [5, 3, 1, "", "x"]], "pycalphad.core.starting_point": [[5, 1, 1, "", "global_min_is_possible"], [5, 1, 1, "", "starting_point"]], "pycalphad.core.utils": [[5, 1, 1, "", "canonical_sort_key"], [5, 1, 1, "", "endmember_matrix"], [5, 1, 1, "", "extract_parameters"], [5, 1, 1, "", "filter_phases"], [5, 1, 1, "", "generate_dof"], [5, 1, 1, "", "generate_symmetric_group"], [5, 1, 1, "", "get_pure_elements"], [5, 1, 1, "", "get_state_variables"], [5, 1, 1, "", "instantiate_models"], [5, 1, 1, "", "point_sample"], [5, 1, 1, "", "recursive_tuplify"], [5, 1, 1, "", "sizeof_fmt"], [5, 1, 1, "", "unpack_components"], [5, 1, 1, "", "unpack_condition"], [5, 1, 1, "", "unpack_kwarg"], [5, 1, 1, "", "unpack_phases"], [5, 1, 1, "", "wrap_symbol"]], "pycalphad.io": [[6, 0, 0, "-", "cs_dat"], [6, 0, 0, "-", "database"], [6, 0, 0, "-", "grammar"], [6, 0, 0, "-", "tdb"], [6, 0, 0, "-", "tdb_keywords"]], "pycalphad.io.cs_dat": [[6, 2, 1, "", "AdditionalCoefficientPair"], [6, 2, 1, "", "Endmember"], [6, 2, 1, "", "EndmemberAqueous"], [6, 2, 1, "", "EndmemberMagnetic"], [6, 2, 1, "", "EndmemberQKTO"], [6, 2, 1, "", "EndmemberRealGas"], [6, 2, 1, "", "ExcessBase"], [6, 2, 1, "", "ExcessQKTO"], [6, 2, 1, "", "ExcessRKM"], [6, 2, 1, "", "ExcessRKMMagnetic"], [6, 2, 1, "", "Header"], [6, 2, 1, "", "IntervalBase"], [6, 2, 1, "", "IntervalCP"], [6, 2, 1, "", "IntervalG"], [6, 2, 1, "", "PTVmTerms"], [6, 2, 1, "", "PhaseBase"], [6, 2, 1, "", "Phase_Aqueous"], [6, 2, 1, "", "Phase_CEF"], [6, 2, 1, "", "Phase_RealGas"], [6, 2, 1, "", "Phase_SUBQ"], [6, 2, 1, "", "Phase_Stoichiometric"], [6, 2, 1, "", "SUBQExcessQuadruplet"], [6, 2, 1, "", "SUBQPair"], [6, 2, 1, "", "SUBQQuadrupletCoordinations"], [6, 2, 1, "", "TokenParser"], [6, 5, 1, "", "TokenParserError"], [6, 1, 1, "", "parse_PTVm_terms"], [6, 1, 1, "", "parse_additional_terms"], [6, 1, 1, "", "parse_cs_dat"], [6, 1, 1, "", "parse_endmember"], [6, 1, 1, "", "parse_endmember_aqueous"], [6, 1, 1, "", "parse_endmember_qkto"], [6, 1, 1, "", "parse_endmember_subq"], [6, 1, 1, "", "parse_excess_magnetic_parameters"], [6, 1, 1, "", "parse_excess_parameters"], [6, 1, 1, "", "parse_excess_parameters_pitz"], [6, 1, 1, "", "parse_excess_qkto"], [6, 1, 1, "", "parse_header"], [6, 1, 1, "", "parse_interval_Gibbs"], [6, 1, 1, "", "parse_interval_heat_capacity"], [6, 1, 1, "", "parse_phase"], [6, 1, 1, "", "parse_phase_aqueous"], [6, 1, 1, "", "parse_phase_cef"], [6, 1, 1, "", "parse_phase_real_gas"], [6, 1, 1, "", "parse_phase_subq"], [6, 1, 1, "", "parse_quadruplet"], [6, 1, 1, "", "parse_stoich_phase"], [6, 1, 1, "", "parse_subq_excess"], [6, 1, 1, "", "read_cs_dat"], [6, 1, 1, "", "rename_element_charge"], [6, 1, 1, "", "tokenize"]], "pycalphad.io.cs_dat.AdditionalCoefficientPair": [[6, 3, 1, "", "coefficient"], [6, 3, 1, "", "exponent"], [6, 4, 1, "", "expr"]], "pycalphad.io.cs_dat.Endmember": [[6, 4, 1, "", "constituent_array"], [6, 4, 1, "", "constituents"], [6, 4, 1, "", "expr"], [6, 3, 1, "", "gibbs_eq_type"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "intervals"], [6, 4, 1, "", "species"], [6, 3, 1, "", "species_name"], [6, 3, 1, "", "stoichiometry_pure_elements"]], "pycalphad.io.cs_dat.EndmemberAqueous": [[6, 3, 1, "", "charge"], [6, 4, 1, "", "insert"]], "pycalphad.io.cs_dat.EndmemberMagnetic": [[6, 3, 1, "", "curie_temperature"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "magnetic_moment"]], "pycalphad.io.cs_dat.EndmemberQKTO": [[6, 3, 1, "", "chemical_group"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "stoichiometric_factor"]], "pycalphad.io.cs_dat.EndmemberRealGas": [[6, 3, 1, "", "Pc"], [6, 3, 1, "", "Tc"], [6, 3, 1, "", "Vc"], [6, 3, 1, "", "acentric_factor"], [6, 3, 1, "", "dipole_moment"], [6, 4, 1, "", "insert"]], "pycalphad.io.cs_dat.ExcessBase": [[6, 4, 1, "", "constituent_array"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "interacting_species_idxs"]], "pycalphad.io.cs_dat.ExcessQKTO": [[6, 3, 1, "", "coefficients"], [6, 3, 1, "", "exponents"], [6, 4, 1, "", "expr"], [6, 4, 1, "", "insert"]], "pycalphad.io.cs_dat.ExcessRKM": [[6, 3, 1, "", "coefficients"], [6, 4, 1, "", "expr"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "parameter_order"]], "pycalphad.io.cs_dat.ExcessRKMMagnetic": [[6, 3, 1, "", "curie_temperature"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "magnetic_moment"], [6, 3, 1, "", "parameter_order"]], "pycalphad.io.cs_dat.Header": [[6, 3, 1, "", "excess_coefficient_idxs"], [6, 3, 1, "", "gibbs_coefficient_idxs"], [6, 3, 1, "", "list_soln_species_count"], [6, 3, 1, "", "num_stoich_phases"], [6, 3, 1, "", "pure_elements"], [6, 3, 1, "", "pure_elements_mass"]], "pycalphad.io.cs_dat.IntervalBase": [[6, 3, 1, "", "T_max"], [6, 4, 1, "", "cond"], [6, 4, 1, "", "expr"], [6, 4, 1, "", "expr_cond_pair"]], "pycalphad.io.cs_dat.IntervalCP": [[6, 3, 1, "", "CP_coefficients"], [6, 3, 1, "", "H298"], [6, 3, 1, "", "H_trans"], [6, 3, 1, "", "PTVm_terms"], [6, 3, 1, "", "S298"], [6, 3, 1, "", "additional_coeff_pairs"], [6, 4, 1, "", "expr"]], "pycalphad.io.cs_dat.IntervalG": [[6, 3, 1, "", "PTVm_terms"], [6, 3, 1, "", "additional_coeff_pairs"], [6, 3, 1, "", "coefficients"], [6, 4, 1, "", "expr"]], "pycalphad.io.cs_dat.PTVmTerms": [[6, 3, 1, "", "terms"]], "pycalphad.io.cs_dat.PhaseBase": [[6, 3, 1, "", "endmembers"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "phase_name"], [6, 3, 1, "", "phase_type"]], "pycalphad.io.cs_dat.Phase_Aqueous": [[6, 3, 1, "", "endmembers"]], "pycalphad.io.cs_dat.Phase_CEF": [[6, 3, 1, "", "constituent_array"], [6, 3, 1, "", "endmember_constituent_idxs"], [6, 3, 1, "", "excess_parameters"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "magnetic_afm_factor"], [6, 3, 1, "", "magnetic_structure_factor"], [6, 3, 1, "", "subl_ratios"]], "pycalphad.io.cs_dat.Phase_RealGas": [[6, 3, 1, "", "endmembers"]], "pycalphad.io.cs_dat.Phase_SUBQ": [[6, 3, 1, "", "chemical_group_overrides"], [6, 3, 1, "", "excess_parameters"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "num_pairs"], [6, 3, 1, "", "num_quadruplets"], [6, 3, 1, "", "num_subl_1_const"], [6, 3, 1, "", "num_subl_2_const"], [6, 3, 1, "", "quadruplets"], [6, 3, 1, "", "subl_1_charges"], [6, 3, 1, "", "subl_1_chemical_groups"], [6, 3, 1, "", "subl_1_const"], [6, 3, 1, "", "subl_2_charges"], [6, 3, 1, "", "subl_2_chemical_groups"], [6, 3, 1, "", "subl_2_const"], [6, 3, 1, "", "subl_const_idx_pairs"]], "pycalphad.io.cs_dat.Phase_Stoichiometric": [[6, 4, 1, "", "insert"], [6, 3, 1, "", "magnetic_afm_factor"], [6, 3, 1, "", "magnetic_structure_factor"]], "pycalphad.io.cs_dat.SUBQExcessQuadruplet": [[6, 3, 1, "", "additional_anion_mixing_const"], [6, 3, 1, "", "additional_cation_mixing_const"], [6, 3, 1, "", "excess_coeffs"], [6, 4, 1, "", "expr"], [6, 4, 1, "", "insert"], [6, 3, 1, "", "metadata"], [6, 3, 1, "", "mixing_code"], [6, 3, 1, "", "mixing_const"], [6, 3, 1, "", "mixing_exponents"], [6, 3, 1, "", "mixing_type"]], "pycalphad.io.cs_dat.SUBQPair": [[6, 4, 1, "", "insert"], [6, 3, 1, "", "stoichiometry_quadruplet"], [6, 3, 1, "", "zeta"]], "pycalphad.io.cs_dat.SUBQQuadrupletCoordinations": [[6, 4, 1, "", "insert"], [6, 3, 1, "", "quadruplet_coordinations"], [6, 3, 1, "", "quadruplet_idxs"]], "pycalphad.io.cs_dat.TokenParser": [[6, 4, 1, "", "parse"], [6, 4, 1, "", "parseN"]], "pycalphad.io.database": [[6, 2, 1, "", "Database"], [6, 5, 1, "", "DatabaseExportError"], [6, 2, 1, "", "DatabaseFormat"], [6, 2, 1, "", "Phase"]], "pycalphad.io.database.Database": [[6, 4, 1, "", "add_parameter"], [6, 4, 1, "", "add_phase"], [6, 4, 1, "", "add_phase_constituents"], [6, 4, 1, "", "add_structure_entry"], [6, 3, 1, "", "elements"], [6, 4, 1, "", "from_file"], [6, 4, 1, "", "from_string"], [6, 3, 1, "", "phases"], [6, 4, 1, "", "process_parameter_queue"], [6, 3, 1, "", "references"], [6, 4, 1, "", "register_format"], [6, 4, 1, "", "search"], [6, 3, 1, "", "species"], [6, 3, 1, "", "symbols"], [6, 4, 1, "", "to_file"], [6, 4, 1, "", "to_string"]], "pycalphad.io.database.DatabaseFormat": [[6, 3, 1, "", "read"], [6, 3, 1, "", "write"]], "pycalphad.io.database.Phase": [[6, 3, 1, "", "constituents"], [6, 3, 1, "", "model_hints"], [6, 3, 1, "", "name"], [6, 3, 1, "", "sublattices"]], "pycalphad.io.grammar": [[6, 1, 1, "", "parse_chemical_formula"]], "pycalphad.io.tdb": [[6, 2, 1, "", "TCCommand"], [6, 2, 1, "", "TCPrinter"], [6, 1, 1, "", "add_phase_symmetry_ordering_parameters"], [6, 1, 1, "", "read_tdb"], [6, 1, 1, "", "reflow_text"], [6, 1, 1, "", "to_interval"], [6, 1, 1, "", "write_tdb"]], "pycalphad.io.tdb.TCCommand": [[6, 4, 1, "", "parseImpl"]], "pycalphad.io.tdb.TCPrinter": [[6, 4, 1, "", "doprint"]], "pycalphad.io.tdb_keywords": [[6, 1, 1, "", "expand_keyword"]], "pycalphad.model": [[3, 2, 1, "", "Model"], [3, 2, 1, "", "ReferenceState"], [3, 2, 1, "", "TestModel"], [3, 2, 1, "", "classproperty"]], "pycalphad.model.Model": [[3, 3, 1, "", "BMAG"], [3, 6, 1, "", "CPM"], [3, 6, 1, "", "CPM_MIX"], [3, 6, 1, "", "DOO"], [3, 6, 1, "", "G"], [3, 6, 1, "", "GM"], [3, 6, 1, "", "GM_MIX"], [3, 6, 1, "", "HM"], [3, 6, 1, "", "HM_MIX"], [3, 3, 1, "", "NT"], [3, 6, 1, "", "SM"], [3, 6, 1, "", "SM_MIX"], [3, 3, 1, "", "TC"], [3, 6, 1, "", "ast"], [3, 4, 1, "", "atomic_ordering_energy"], [3, 3, 1, "", "beta"], [3, 4, 1, "", "build_phase"], [3, 3, 1, "", "constituents"], [3, 3, 1, "", "contributions"], [3, 3, 1, "", "curie_temperature"], [3, 6, 1, "", "degree_of_ordering"], [3, 4, 1, "", "einstein_energy"], [3, 6, 1, "", "endmember_reference_model"], [3, 6, 1, "", "energy"], [3, 6, 1, "", "enthalpy"], [3, 6, 1, "", "entropy"], [3, 4, 1, "", "excess_mixing_energy"], [3, 3, 1, "", "extrapolate_temperature_bounds"], [3, 6, 1, "", "formulaenergy"], [3, 4, 1, "", "get_internal_constraints"], [3, 3, 1, "", "gradient"], [3, 6, 1, "", "heat_capacity"], [3, 4, 1, "", "ideal_mixing_energy"], [3, 4, 1, "", "kohler_toop_excess_sum"], [3, 4, 1, "", "magnetic_energy"], [3, 6, 1, "", "mixing_energy"], [3, 6, 1, "", "mixing_enthalpy"], [3, 6, 1, "", "mixing_entropy"], [3, 6, 1, "", "mixing_heat_capacity"], [3, 4, 1, "", "moles"], [3, 3, 1, "", "neel_temperature"], [3, 4, 1, "", "redlich_kister_sum"], [3, 4, 1, "", "reference_energy"], [3, 4, 1, "", "shift_reference_state"], [3, 4, 1, "", "symbol_replace"], [3, 4, 1, "", "twostate_energy"], [3, 4, 1, "", "unwrap_piecewise"], [3, 6, 1, "", "variables"], [3, 4, 1, "", "volume_energy"], [3, 4, 1, "", "xiong_magnetic_energy"]], "pycalphad.model.ReferenceState": [[3, 3, 1, "", "fixed_statevars"], [3, 3, 1, "", "phase_name"], [3, 3, 1, "", "species"]], "pycalphad.models": [[7, 0, 0, "-", "model_mqmqa"]], "pycalphad.models.model_mqmqa": [[7, 2, 1, "", "ModelMQMQA"]], "pycalphad.models.model_mqmqa.ModelMQMQA": [[7, 3, 1, "", "BMAG"], [7, 6, 1, "", "CPM"], [7, 6, 1, "", "CPM_MIX"], [7, 3, 1, "", "DOO"], [7, 6, 1, "", "G"], [7, 6, 1, "", "GM"], [7, 6, 1, "", "GM_MIX"], [7, 6, 1, "", "HM"], [7, 6, 1, "", "HM_MIX"], [7, 3, 1, "", "NT"], [7, 6, 1, "", "SM"], [7, 6, 1, "", "SM_MIX"], [7, 3, 1, "", "TC"], [7, 4, 1, "", "Z"], [7, 6, 1, "", "ast"], [7, 3, 1, "", "beta"], [7, 4, 1, "", "build_phase"], [7, 3, 1, "", "contributions"], [7, 3, 1, "", "curie_temperature"], [7, 3, 1, "", "degree_of_ordering"], [7, 6, 1, "", "energy"], [7, 6, 1, "", "enthalpy"], [7, 6, 1, "", "entropy"], [7, 4, 1, "", "excess_mixing_energy"], [7, 4, 1, "", "get_internal_constraints"], [7, 6, 1, "", "heat_capacity"], [7, 4, 1, "", "ideal_mixing_energy"], [7, 6, 1, "", "mixing_energy"], [7, 6, 1, "", "mixing_enthalpy"], [7, 6, 1, "", "mixing_entropy"], [7, 6, 1, "", "mixing_heat_capacity"], [7, 4, 1, "", "moles"], [7, 3, 1, "", "neel_temperature"], [7, 6, 1, "", "normalization"], [7, 4, 1, "", "reference_energy"], [7, 6, 1, "", "reference_model"], [7, 4, 1, "", "shift_reference_state"], [7, 6, 1, "", "site_fractions"], [7, 6, 1, "", "state_variables"], [7, 4, 1, "", "symbol_replace"]], "pycalphad.plot": [[9, 0, 0, "-", "binary"], [8, 0, 0, "-", "eqplot"], [8, 0, 0, "-", "ternary"], [8, 0, 0, "-", "utils"]], "pycalphad.plot.binary": [[9, 0, 0, "-", "compsets"], [9, 0, 0, "-", "map"], [9, 0, 0, "-", "plot"], [9, 0, 0, "-", "zpf_boundary_sets"]], "pycalphad.plot.binary.compsets": [[9, 2, 1, "", "BinaryCompset"], [9, 2, 1, "", "CompsetPair"], [9, 1, 1, "", "find_two_phase_region_compsets"], [9, 1, 1, "", "get_compsets"]], "pycalphad.plot.binary.compsets.BinaryCompset": [[9, 3, 1, "", "SITE_FRAC_ATOL"], [9, 3, 1, "", "TEMPERATURE_ATOL"], [9, 4, 1, "", "from_dataset_vertices"]], "pycalphad.plot.binary.compsets.CompsetPair": [[9, 4, 1, "", "Tdiscrepancy"], [9, 3, 1, "", "a"], [9, 3, 1, "", "b"], [9, 3, 1, "", "compositions"], [9, 3, 1, "", "compsets"], [9, 3, 1, "", "max_composition"], [9, 3, 1, "", "mean_composition"], [9, 3, 1, "", "min_composition"], [9, 4, 1, "", "pairwise_xdiscrepancy"], [9, 3, 1, "", "phases"], [9, 3, 1, "", "same_phase"], [9, 3, 1, "", "temperature"], [9, 3, 1, "", "unique_phases"], [9, 4, 1, "", "xdiscrepancy"], [9, 4, 1, "", "ydiscrepancy"], [9, 4, 1, "", "ydiscrepancy_max"]], "pycalphad.plot.binary.map": [[9, 1, 1, "", "map_binary"]], "pycalphad.plot.binary.plot": [[9, 1, 1, "", "binplot"], [9, 1, 1, "", "plot_boundaries"]], "pycalphad.plot.binary.zpf_boundary_sets": [[9, 2, 1, "", "TwoPhaseRegion"], [9, 2, 1, "", "ZPFBoundarySets"]], "pycalphad.plot.binary.zpf_boundary_sets.TwoPhaseRegion": [[9, 4, 1, "", "add_compsets"], [9, 3, 1, "", "compsets"], [9, 4, 1, "", "compsets_belong_in_region"], [9, 3, 1, "", "phases"]], "pycalphad.plot.binary.zpf_boundary_sets.ZPFBoundarySets": [[9, 4, 1, "", "add_compsets"], [9, 3, 1, "", "all_compsets"], [9, 3, 1, "", "components"], [9, 4, 1, "", "get_line_plot_boundaries"], [9, 4, 1, "", "get_phases"], [9, 4, 1, "", "get_scatter_plot_boundaries"], [9, 3, 1, "", "indep_comp_cond"], [9, 4, 1, "", "rebuild_two_phase_regions"], [9, 3, 1, "", "two_phase_regions"]], "pycalphad.plot.eqplot": [[8, 1, 1, "", "eqplot"]], "pycalphad.plot.ternary": [[8, 1, 1, "", "ternplot"]], "pycalphad.plot.utils": [[8, 1, 1, "", "phase_legend"]], "pycalphad.variables": [[3, 2, 1, "", "ChemicalPotential"], [3, 3, 1, "", "MU"], [3, 2, 1, "", "MassFraction"], [3, 2, 1, "", "MoleFraction"], [3, 3, 1, "", "NP"], [3, 2, 1, "", "PhaseFraction"], [3, 2, 1, "", "SiteFraction"], [3, 2, 1, "", "Species"], [3, 2, 1, "", "StateVariable"], [3, 3, 1, "", "W"], [3, 3, 1, "", "X"], [3, 3, 1, "", "Y"], [3, 1, 1, "", "get_mass_fractions"], [3, 1, 1, "", "get_mole_fractions"], [3, 3, 1, "", "site_fraction"]], "pycalphad.variables.Species": [[3, 3, 1, "", "charge"], [3, 3, 1, "", "constituents"], [3, 6, 1, "", "escaped_name"], [3, 3, 1, "", "name"], [3, 6, 1, "", "number_of_atoms"], [3, 6, 1, "", "weight"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:exception", "6": "py:property"}, "terms": {"": [3, 5, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "00": [11, 15, 17], "00000000e": 17, "00000e": 18, "000281": 18, "00049": 10, "000657": 18, "0007": 11, "001": [3, 7, 9], "00165358": 17, "002": 3, "004": [10, 11], "00474": 18, "005": [9, 14], "006": 10, "007": 18, "008": 11, "009636": 13, "00e": 15, "01": [3, 6, 10, 11, 12, 13, 15, 17, 18, 21], "011": 11, "0123": 18, "013": 18, "013e": [13, 17], "015": 16, "01e": 17, "02": [10, 13, 17, 18, 21, 22], "0230": 7, "029": 0, "03": [13, 15, 17, 18, 21], "031": 18, "0364": 11, "04": [3, 13, 17, 21], "0482": 14, "05": [9, 13, 17, 21], "06": [18, 21], "065e": 17, "068e": 17, "07": 21, "08": [10, 21], "09": [9, 18, 21], "0x15b9e392520": 12, "0x1ebe70d6dc0": 13, "0x2107633e640": 14, "1": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "10": [3, 5, 7, 9, 10, 11, 12, 13, 14, 17, 18, 21], "100": [5, 13, 17], "1000": [10, 17, 18], "1000k": 17, "1001": 15, "1007": 7, "101": 0, "101325": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18], "1013325": 14, "1016": [0, 3, 7, 9, 10, 11, 18], "10195": 11, "1023": 14, "102341": 7, "102934": 22, "104": 0, "1043": 13, "105": [18, 22], "1054": 11, "1073": 14, "1073k": 14, "108": 0, "109": 3, "1094841": 5, "11": [14, 21], "110": 13, "111": 0, "11369": 11, "1154": 14, "116": 0, "11622": 11, "117": 0, "118": 11, "119": [3, 10, 18], "12": [11, 15, 16, 21], "12072782e": 17, "1208118": 5, "12300": 18, "124": 0, "127": [0, 10], "128": 18, "129": 11, "13": [13, 18, 21], "1300": 18, "133": 11, "135": 0, "136": 0, "137": 0, "1394": 4, "14": [1, 17, 21, 22], "140": [0, 21], "1400": 13, "1409": 7, "140x7": 5, "141": 0, "1416": 7, "144": 0, "145": 0, "146": 0, "15": [3, 11, 12, 13, 15, 17], "150": 12, "16": 13, "161": 0, "163": 11, "166": 0, "17": [18, 21], "175": 0, "177": 0, "18": [3, 9, 13, 14, 18, 21], "180": 0, "1800": 13, "18080271": 17, "184": 0, "187": 0, "19": 21, "192": 0, "193": 0, "194e": 17, "196": 0, "1970": 14, "1990": 14, "1991": [0, 3], "1993": 14, "19t19": [13, 17], "1d": [9, 10, 16], "1e": [10, 13, 15, 17], "1e5": 12, "1k": 11, "1m": 5, "2": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23], "20": [5, 10, 13, 17, 21], "200": [0, 5], "2000": [5, 6, 10, 11, 12, 13], "2000k": 11, "2001": 7, "2002": 3, "2005": 3, "2007": 3, "2008": 3, "200m": 20, "2010": 11, "2011": 16, "2012": [0, 3], "2013": 18, "2014": [9, 18], "2015": [9, 21], "2016": [18, 21], "2017": [18, 21], "2018": 21, "2019": 21, "2020": [4, 21], "2021": [7, 21], "2021b": 0, "2022": [13, 17, 21], "2023": 21, "2024": 21, "205": 0, "208": 22, "209": 0, "21": 21, "2100": 18, "2128": 18, "214": 0, "21500": 18, "217": 0, "22": 21, "220": 0, "223": 0, "229e": 13, "23": 21, "2320": 14, "234": 0, "237": 0, "239": 0, "24": [0, 6, 17], "240": 0, "240543628600637": 18, "241": 0, "242": 0, "248": 0, "249": 0, "25": [10, 13, 21], "2500": [4, 13], "251": 0, "254": 0, "2561": 17, "257": 0, "258": 0, "2585": 18, "26": [9, 13, 21], "262": 0, "263": 0, "264": 0, "266": 0, "267": 0, "269": 0, "27": 11, "270": [0, 18], "272": 0, "273": [0, 12], "274": 0, "274e": 13, "27565": 11, "279": 10, "2797": 11, "28": [11, 21], "2800": [10, 15], "281": 0, "281597": 13, "282": 0, "288": 0, "289": 0, "29": [3, 10, 21], "292": 0, "294": 4, "295": 0, "297": 0, "298": [0, 3, 10, 15], "2d": [9, 15], "2st": 3, "3": [3, 5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22], "30": [0, 5], "300": [10, 12, 13], "303": 10, "308": 0, "31": 21, "311": [0, 10], "312": 0, "3121": 18, "3145": 18, "3149017277": 13, "315": 14, "316": 0, "32": [0, 3, 7], "320": 13, "325": 0, "327": 0, "328": 0, "329": 0, "33": 5, "330": 0, "331": 0, "332": 0, "333": 0, "333e": 11, "334": 0, "335": 0, "336": 0, "339": 0, "34": [11, 13, 18, 22], "340": [0, 13], "341": 0, "343": 0, "344": 0, "346": 0, "348": 0, "35": 16, "350": 13, "3500": 10, "351": 0, "3550": 14, "357": 0, "358": 0, "35995184": 17, "36": 18, "360": 0, "361": [0, 3], "362": 0, "3637": 13, "364": 0, "365": 0, "367": 0, "368": 0, "37": 0, "370": [0, 3], "373": 0, "374": 0, "376": 0, "3765": 14, "377e": 13, "3798": 18, "38": 0, "386": 0, "389": 0, "39": [13, 16, 17, 18], "392": [0, 18], "397": 0, "4": [5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 21], "40": 0, "400": [0, 13], "4001": 17, "405": 0, "406": 0, "41": 10, "410": 0, "411": 14, "412": 0, "413e": 13, "415": 0, "416": 0, "418": 14, "42": 13, "421": 18, "424": 0, "428": 0, "43": [0, 11, 17, 22], "43004350e": 17, "431": 0, "43933641e": 17, "44": [13, 18], "441477": 17, "443e": 13, "447e": 13, "4489": 11, "45": 13, "451": [10, 14], "455": [10, 14], "456": 0, "46": 0, "461": 18, "466": 0, "46e": 13, "47": [0, 18], "470": 0, "476": 0, "47637": 11, "479": 0, "48": [9, 18], "485": 11, "48e": 13, "49": 17, "495": 0, "498": 0, "5": [3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "50": [5, 13], "500": [5, 13, 17], "5000": 16, "501": 0, "5045": 14, "507": 0, "508": 0, "50th": 17, "51": 18, "516": 0, "517": 0, "518": 0, "522": 0, "523": 0, "526e": 13, "528e": 17, "530": 0, "5305": 18, "531": 0, "533": 0, "5334": [0, 21], "534": 0, "536": 0, "537": 0, "537709263": 11, "538": 0, "53910096": 17, "541": 0, "5411": 14, "55": [11, 12], "559e": 17, "56": 16, "56066359e": 17, "56995650e": 17, "57": 0, "578078": 5, "59": 11, "590527": 11, "5916": [10, 11], "5min": 16, "6": [3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 21], "60": [16, 18], "600": 17, "6000": 11, "601354": 13, "6125": 18, "615e": 17, "62": 0, "63": 0, "6363": 13, "64": 0, "641259263": 11, "6433": 14, "647246": 11, "6488": 18, "6549": 14, "6666": 13, "690": 11, "7": [5, 7, 10, 13, 17, 18, 20, 21, 22], "70": 22, "700": [12, 13, 17], "71825009": 17, "71828182845905": 18, "719e": 13, "7352": 14, "7423": 11, "74232": 11, "7439": 17, "74e": 18, "75": [7, 13, 17, 18], "750": 13, "761326": 13, "78": 6, "8": [3, 5, 6, 11, 13, 14, 17, 18, 20, 21], "80": [0, 6], "800": [12, 17], "8000": 22, "8070": 14, "807e": 13, "81e": 17, "830": 16, "830k": 16, "8384": 14, "84": [10, 14], "84400745685": 18, "847": 11, "8485": 18, "85": [0, 17], "8512": 18, "858e": 13, "859e": 17, "860754": 11, "87927218e": 17, "895": 18, "89739922": 17, "9": [10, 11, 12, 13, 15, 17, 18, 21, 22], "90": 0, "900": 17, "91": 0, "913": 22, "93": 13, "937746": 11, "944e": 13, "949887637": 11, "949e": 13, "95": 17, "9531": 14, "9569": 14, "95e": 13, "97": 13, "97648824": 17, "97e": 18, "98": [0, 13], "98150e": 18, "98e": 15, "99": 13, "99e": 15, "9e": 13, "A": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 21], "As": [6, 10, 22], "At": 22, "By": [1, 4, 8, 9, 15, 17], "For": [0, 3, 5, 8, 9, 13, 17, 18], "IF": 0, "If": [0, 1, 3, 4, 5, 6, 8, 9, 10, 15, 21, 22, 23], "In": [0, 3, 5, 7, 9, 13, 14, 15, 17, 22], "It": [0, 1, 3, 5, 7, 10, 17], "NOT": 23, "No": [3, 15], "THEN": 0, "THESE": 23, "That": [3, 5, 11], "The": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "Then": [1, 5, 16, 22], "There": [0, 13, 17], "These": [0, 4, 5, 10, 13, 23], "To": [1, 3, 5, 10, 13, 15, 22, 23], "Will": 5, "_": [6, 7], "__repr__": 0, "__wrapped__": 5, "_array_valid": [0, 18], "_build": 22, "_compute_phase_valu": 0, "_eqcalcul": 0, "_et": 7, "_get_lambdify_opt": 4, "_hashedseq": 5, "_latex": 12, "_map_const_idxs_to_subl_idx": 6, "_mix": [0, 3], "_sample_phase_constitut": 0, "a2": 13, "ab": [7, 12], "abbrevi": [0, 6], "abcd": 18, "abil": 18, "abl": 22, "about": [5, 9, 13, 18, 21], "abov": [0, 5, 15, 22], "abrupt": 13, "absenc": 17, "absolut": [0, 9, 15], "abspath": 10, "abstract": [3, 6, 7], "academ": 3, "accept": 5, "access": [0, 5, 17, 18, 22], "accommod": 0, "accord": 0, "account": 6, "accuraci": 0, "acentric_factor": [3, 6], "achiev": 5, "acknowledg": 0, "acr": 14, "acr_zn": 14, "across": 15, "action": [0, 22, 23], "activ": [0, 1, 4, 5, 10, 12, 19, 21], "activategit": 1, "activatepip": 1, "active_comp": 5, "activest": 5, "actual": [3, 5, 17, 22], "ad": [0, 6, 9, 20], "add": [0, 3, 5, 6, 7, 9, 14, 18, 22, 23], "add_collect": 9, "add_compset": [8, 9], "add_nearly_st": [3, 5], "add_paramet": [3, 6], "add_phas": [3, 6], "add_phase_constitu": [3, 6], "add_phase_symmetry_ordering_paramet": [3, 6], "add_refer": [0, 18], "add_structure_entri": [3, 6], "add_subplot": [12, 16], "add_vari": [3, 5], "addit": [0, 5, 6, 9, 10, 17, 22], "additional_anion_mixing_const": [3, 6], "additional_cation_mixing_const": [3, 6], "additional_coeff_pair": [3, 6], "additional_statevar": 4, "additionalcoefficientpair": [3, 6], "address": [0, 21], "adjust": [0, 3, 6, 7], "advance_st": [3, 5], "affect": 15, "after": [0, 3, 5, 7, 18, 22, 23], "again": [0, 5], "against": [5, 6], "al": [0, 3, 4, 5, 7, 9, 14, 16, 17, 18, 19, 21], "al13fe4": 10, "al2f": 10, "al3ni": 4, "al3ni2": 4, "al3ni5": 4, "al5fe2": 10, "al5fe4": 10, "alcuzr": 18, "alexei": 11, "alfe_sei": [10, 13], "algorithm": [0, 9], "ali": 0, "alia": [3, 4, 5, 6], "align": [5, 13], "all": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23], "all_compset": [8, 9], "alloi": [14, 18], "allow": [0, 5, 10, 15], "along": [0, 5, 9, 15], "alpha": 0, "alphabet": [0, 15], "alreadi": [1, 3, 6, 16, 22, 23], "also": [0, 1, 3, 5, 10, 13, 15, 17, 18], "altern": 16, "aluminum": 14, "alwai": [0, 5, 13, 15, 17], "alzn_mei": [10, 14, 17], "ambigu": 3, "amend_phase_descript": 11, "among": 3, "amorph": [0, 3], "amount": [5, 9, 13], "amp": 18, "an": [0, 1, 3, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23], "anaconda": [0, 1], "analog": [15, 17], "analogi": 0, "analysi": 0, "ani": [0, 3, 5, 6, 7, 9, 15, 17, 21, 22, 23], "anoth": [1, 9, 22], "ansara": 10, "anyth": 3, "anywai": 6, "api": [0, 3, 5, 7, 9, 16, 21, 23], "apidoc": 23, "appdata": 13, "appear": [3, 9], "appen": 11, "append": [6, 18], "applic": 22, "approach": 3, "appropri": 23, "approxim": [0, 5, 7], "ar": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 22], "arbitrari": [3, 7, 15], "aregu": 0, "arg": [3, 6, 7], "argument": [0, 4, 5, 6, 8, 9, 10, 12, 15, 21], "aris": 3, "arithmet": 3, "ariti": [3, 7], "around": [0, 5, 8, 9, 13], "arrai": [0, 3, 5, 6, 9, 10, 13, 15, 16, 17], "arrow": 22, "articl": [11, 22], "artifact": 23, "assert": 6, "assess": [16, 18], "assessed_system": 18, "associ": [0, 5, 6], "assum": [3, 5, 9, 12, 23], "assumpt": [0, 3], "ast": [0, 2, 3, 7], "atm": 15, "atom": [0, 3, 7, 11, 13], "atomic_ordering_energi": [2, 3], "attempt": [0, 6], "attr": [0, 3, 5], "attribut": [0, 3, 5, 7, 13, 17, 18], "auto": 6, "autograd": 0, "autom": [0, 1], "automat": [0, 5, 6, 10, 16, 17, 23], "autowrapfunct": 4, "avail": [0, 1, 10, 16, 21, 23], "averag": 3, "avoid": 6, "ax": [0, 5, 8, 9, 10, 12, 15, 18, 19, 21], "axessubplot": 8, "axi": [0, 8, 15, 20], "b": [0, 5, 6, 7, 8, 9, 10, 22], "b2": 13, "b2_bcc": [10, 13], "back": [0, 4], "backend": [0, 4], "background": 3, "backport": 5, "bajpai": 7, "balanc": [3, 5], "bar": [0, 22], "base": [0, 3, 4, 5, 6, 7, 9, 18, 21, 22], "bash": 22, "basi": [3, 7], "basic": [4, 17], "bbox": 20, "bbox_inch": 20, "bbox_to_anchor": [10, 12], "bcc": 13, "bcc_a2": [8, 11], "bcc_b2": 5, "bcc_renb": [10, 15], "becaus": [0, 3, 5, 11, 13, 14, 17, 18, 22], "been": [0, 3, 5, 21], "befor": [0, 1, 15, 17], "begin": [0, 13], "behavior": [0, 4], "being": 3, "belong": 9, "below": [0, 9, 10, 13, 15, 17, 22], "bengt": 11, "best": 1, "beta": [0, 2, 3, 7], "better": [0, 4], "between": [5, 6, 9, 15], "beyond": 0, "big": 0, "biggest": 0, "bin": 1, "binari": [0, 3, 7, 8, 18, 19, 21], "binarycompset": [8, 9], "binplot": [0, 8, 9, 12, 19, 20, 21], "bit": 0, "blank": 23, "bld": 0, "blue": 13, "bmag": [0, 2, 3, 7], "bmagn": [6, 11, 18], "bmh": 13, "bool": [4, 5, 6, 8, 9], "boolean": [0, 5], "boston": 3, "both": [5, 13, 15], "bottom": [9, 22], "bound": 5, "boundari": 9, "boundary_collect": 9, "boundary_set": 9, "box": [20, 23], "bracket": 1, "branch": [0, 1, 22, 23], "branch_nam": 22, "break": [0, 6], "brk": 0, "broadcast": [0, 5], "broadcast_lik": 12, "broken": [0, 9, 23], "bug": [0, 20, 21], "bugfix": 0, "build": [0, 1, 3, 4, 5, 7, 8, 23], "build_cal": [3, 4], "build_constraint": [3, 5], "build_constraint_funct": [3, 4], "build_ext": [1, 23], "build_funct": [3, 4], "build_gradi": 4, "build_hessian": 4, "build_phas": [2, 3, 7, 18], "build_phase_record": [3, 4], "build_viscos": 18, "buildfunctionsresult": [3, 4], "built": [3, 4, 22], "bump": 0, "bundl": 1, "button": 22, "byte": 5, "c": [0, 1, 6, 10, 11, 13, 16, 22], "cach": [0, 2, 3], "cache_algorithm": 5, "cache_clear": 5, "cache_info": 5, "cacheit": [3, 5], "calc": [0, 6, 10], "calc_kwarg": 9, "calc_model": 15, "calc_opt": 5, "calc_result": 17, "calcul": [0, 2, 3, 4, 7, 8, 9, 11, 13, 16, 19, 21], "calculateerror": [3, 5], "call": [0, 1, 3, 4, 5, 6, 7, 8, 9, 15, 17, 20, 22], "callabl": [0, 2, 3, 5, 6, 8, 9], "caller": 5, "calphad": [0, 3, 7, 9, 10, 11, 16, 18, 21, 22], "calucl": 18, "cambridg": 3, "can": [0, 1, 3, 4, 5, 6, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23], "candid": [5, 6], "candidate_phas": 5, "cannot": [0, 4, 5, 6, 22], "canonical_sort_kei": [3, 5], "capac": [0, 19, 21], "care": [5, 9], "cartesian": [2, 3], "case": [0, 3, 4, 5, 22], "caselesskeyword": 6, "catch": 0, "cation": 3, "caus": [0, 3], "caveat": 0, "cd": [1, 22], "cef": 7, "cell": 10, "celsiu": 12, "cementit": [0, 19, 21], "cementite_d011": 11, "center": [10, 12, 16], "certain": [0, 6], "chang": [0, 1, 5, 6, 8, 9, 13, 22, 23], "changrong": 18, "channel": [0, 21], "char": 18, "charact": [0, 6], "charg": [0, 2, 3, 6, 19, 21], "chartrand": 7, "chat": 21, "check": [4, 5, 7, 9, 10, 22, 23], "check_converg": [3, 5], "checkout": [1, 23], "chemic": [0, 3, 5, 7, 13, 17], "chemical_group": [3, 6], "chemical_group_overrid": [3, 6], "chemical_potenti": [3, 5], "chemicalpotenti": [2, 3], "chempot": 14, "chempot_ref": 14, "chemsag": [0, 6], "chenyang": 18, "chi": [10, 15], "chi_renb": [10, 15], "choos": [3, 6, 10, 12, 14], "ci": 0, "cl": 6, "clash": 0, "class": [0, 3, 4, 5, 6, 7, 9, 13, 18], "classmethod": [3, 6, 9], "classproperti": [2, 3], "clean": 0, "cleanup": 0, "clear": 5, "click": [22, 23], "clone": [1, 22], "close": 9, "close_miscibility_gap": 9, "cm": 16, "cmap": 16, "coars": 20, "code": [0, 1, 5, 21, 22], "codebas": [7, 22], "codegen": [2, 3], "coeffici": [3, 6], "coincid": 13, "col": 18, "cold": 0, "collect": 0, "colloqui": 6, "color": [0, 8, 9, 10, 12, 13, 16, 23], "color_dict": 10, "colorbar": 16, "column": 5, "com": [1, 4, 5, 11, 22, 23], "combin": [4, 5], "come": [0, 1], "comma": 0, "command": [0, 6, 17, 22], "commatsci": 0, "commit": 23, "common": [0, 4, 5, 6, 10, 17], "comp": [3, 4, 5, 8, 9, 10, 14, 15, 16, 17], "comp_count": 5, "comp_idx": 5, "companion": 0, "compar": [3, 9, 14, 18], "comparison": 0, "compat": [0, 3, 4, 5, 6, 11], "compil": [0, 1, 4, 22], "compiledmodel": 0, "complet": [0, 6, 10, 13, 22], "complex": [0, 3, 9], "compon": [0, 3, 4, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18], "composit": [0, 3, 5, 8, 9, 10, 13, 14, 15, 16, 17, 20], "composition_set": [2, 3], "compositionset": [0, 3, 5], "compound": 3, "comprehens": 0, "compris": 5, "compset": [3, 5, 8], "compset2d": 9, "compset_pair": 9, "compsetpair": [8, 9], "compsets_belong_in_region": [8, 9], "compsetst": [3, 5], "comput": [0, 3, 4, 5, 9, 10, 11, 12, 13, 17, 18, 22], "cond": [3, 5, 6, 8, 9, 10, 15, 16], "conda": [0, 21], "condit": [0, 3, 4, 5, 8, 9, 10, 15, 17, 20], "conditionerror": [3, 5], "configur": [0, 1, 5, 6, 17, 22, 23], "conform": [0, 6], "congratul": 22, "connect": 9, "connet": 3, "cons_func": [3, 4], "cons_hess": [3, 4], "cons_jac": [3, 4], "consid": [3, 5, 8, 9, 10, 12, 21], "consist": [0, 14], "constant": [0, 2, 3, 4, 9, 18], "constitu": [0, 2, 3, 5, 6, 10, 11, 12, 18], "constituent_arrai": [3, 6, 18], "constitut": 5, "constrain": [0, 5], "constraint": [0, 2, 3, 4], "constraint_jac": 5, "constraint_rh": 5, "constraintfunct": [3, 4], "constrainttupl": [3, 5], "construct": [0, 3, 4, 5, 6, 9, 15, 18, 20], "construct_equilibrium_system": [3, 5], "constructor": [0, 3, 5], "consumpt": 0, "contact": 0, "contain": [0, 1, 3, 5, 7, 8, 9, 10, 18], "content": 2, "continu": [0, 13, 23], "contour": 16, "contrib_mod": [3, 7], "contribut": [0, 2, 3, 7, 15, 18, 22], "control": [0, 4, 8], "conveni": [8, 9], "convent": [0, 4, 7], "converg": [0, 3, 5], "convers": 0, "convert": [0, 5, 7], "convex": [5, 9], "convieni": 7, "coolwarm": 16, "coord": [3, 5], "coordin": [5, 8, 9, 13, 17], "copi": [3, 22], "core": [0, 2, 3, 4, 23], "corner": 22, "correct": [0, 6, 14, 22], "correctli": [0, 1, 22, 23], "correspond": [4, 5, 7, 8, 9, 13], "could": [0, 5, 9, 13, 16], "count": 3, "cover": 5, "coverag": 0, "cp_coeffici": [3, 6], "cpm": [2, 3, 5, 7], "cpm_mix": [0, 2, 3, 7, 15], "cpmr": 15, "cr": 18, "crash": 0, "creat": [0, 1, 4, 5, 6, 7, 9, 10, 12, 13, 15, 17, 18], "creation": 0, "crfeni_mi": 6, "crystallin": 18, "crystallograph": 6, "cs_dat": [2, 3], "cse": 4, "cu": [16, 18], "cuip": 18, "curdir": 10, "curi": 13, "curie_temperatur": [0, 2, 3, 6, 7], "current": [0, 1, 3, 6, 7, 9, 10, 22], "current_idx": 5, "currsiz": 5, "curv": 13, "custom": [0, 5, 15, 16, 19, 21], "cut": 21, "cycl": 0, "cyipopt": 0, "cython": [0, 1], "d": [5, 9, 13, 15], "d20220219": [13, 17], "d3jppb": 3, "dask": [0, 5, 20], "dat": [0, 6], "data": [0, 5, 6, 9, 13, 14, 16, 17], "data_var": [3, 5], "dataarrai": [5, 17], "databas": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18], "database_info": [0, 18], "databaseexporterror": [3, 6], "databaseformat": [3, 6], "datafram": [0, 17], "dataset": [0, 5, 8, 9, 13, 14, 19, 21], "date": 6, "db": [6, 11, 13], "db_al_cu_i": 16, "db_alf": 10, "db_alni": 13, "db_alzn": 10, "db_nbre": 10, "dbe": [3, 7, 18], "dbf": [0, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18], "deal": [0, 6], "debug": 5, "decor": [5, 23], "decreas": 13, "def": 18, "default": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 17, 18], "default_arg": 5, "default_command": 18, "defaultdict": 5, "defer": 23, "defin": [0, 3, 4, 5, 6, 7, 9, 10, 13, 15, 18], "define_system_default": 18, "definit": [0, 7], "degener": 5, "degre": [0, 5, 8, 10, 11, 15, 17], "degree_of_ord": [0, 2, 3, 7, 13], "dejan": 11, "del": [18, 23], "delai": [0, 6], "delimit": 0, "delta": 3, "deni": 22, "dens": 20, "densiti": [0, 5, 18], "dep": 22, "depart": 21, "depend": [0, 3, 6, 23], "dependent_speci": 3, "deploi": 0, "deploy": [0, 23], "deprec": 0, "depth": [0, 17], "deriv": 7, "describ": [0, 5, 9, 17, 18], "descript": 23, "descriptor": 6, "design": 13, "desir": 6, "desired_phas": 12, "destroi": 5, "detail": [5, 18], "deteciton": 5, "detect": [0, 6, 10, 23], "determin": [5, 9, 23], "dev": [1, 22], "dev40": [13, 17], "develop": [0, 7, 23], "df": 18, "di": 3, "diagram": [0, 8, 9, 12, 19, 20, 21], "dick": 11, "dict": [0, 3, 4, 5, 6, 7, 8, 9], "dictionari": [0, 3, 4, 5, 6, 9, 10, 17], "diff": 18, "differ": [0, 1, 3, 5, 6, 9, 11, 17], "differenti": 4, "difficult": 0, "diffus": [0, 6], "diffusing_speci": 6, "digtiz": 14, "dill": 0, "dilut": 0, "dim": 5, "dimens": [5, 13, 17], "dimension": [5, 16, 17], "dipole_mo": [3, 6], "dir": 22, "directli": [0, 5, 10, 13, 16], "directori": [1, 10, 22], "dirti": 23, "disabl": [0, 5], "disappear": 13, "discov": 0, "discrep": 9, "discuss": [0, 17], "disord": [0, 3, 5, 13], "dispatch": 6, "displai": 22, "disregard": 0, "dist": 23, "distinct": [5, 9], "distribut": [0, 1, 5, 12, 23], "divid": [0, 7], "djurov": 11, "do": [0, 3, 5, 7, 9, 11, 14, 17, 18, 23], "doaction": 6, "doc": [0, 22, 23], "docstr": [0, 5], "document": [0, 13, 17, 21, 22, 23], "doe": [0, 4, 6, 9, 13, 21, 22], "doesn": [5, 6], "dof": [3, 5], "doferror": [3, 5], "doi": [0, 3, 7, 9, 10, 11, 14, 18, 21], "domain": 0, "don": [1, 4, 5], "done": [3, 7, 22], "doo": [0, 2, 3, 7], "doprint": [3, 6], "dordrecht": 3, "doubl": 5, "down": 22, "download": [0, 1, 22], "dpi": 12, "dq": 18, "dramat": 0, "drawn": 10, "drive": 0, "dronskowski": 11, "drop": [0, 3, 13, 22], "du": 18, "due": [0, 5], "duplic": [0, 5], "dure": [0, 21], "dx": 11, "e": [0, 1, 3, 4, 5, 6, 7, 13, 15, 17, 18, 20], "each": [0, 3, 5, 6, 8, 9, 10, 13, 15, 17], "earli": 0, "earlier": [0, 18], "easier": 0, "easili": [0, 13], "ed": 3, "edit": [1, 22, 23], "ee": 18, "effect": [1, 3, 4, 5, 7, 13], "eid": 6, "ein": 3, "einstein": [0, 3], "einstein_energi": [2, 3], "either": [3, 17, 22], "el": 12, "electr": [19, 21], "element": [0, 3, 4, 5, 6, 7, 9, 11, 14, 15, 17, 18], "elif": 12, "elimin": [0, 4], "ellipsi": 0, "elr": 18, "els": [12, 23], "emb": 3, "emelianenko": 9, "en": 5, "enabl": [0, 8], "encapsul": 5, "encount": 13, "end": [0, 5, 22], "endmemb": [0, 3, 5, 6, 15], "endmember_constituent_idx": [3, 6], "endmember_matrix": [3, 5], "endmember_reference_model": [2, 3], "endmemberaqu": [3, 6], "endmembermagnet": [3, 6], "endmemberqkto": [3, 6], "endmemberrealga": [3, 6], "energet": [0, 3], "energi": [0, 2, 3, 5, 6, 7, 9, 13, 17, 19, 20, 21], "energy_surf": 0, "enforc": 0, "engin": [0, 13, 17, 21], "enh": 0, "enhanc": 0, "enough": 17, "ensur": [0, 1, 4, 5, 6, 11, 22, 23], "enter": 6, "enthalpi": [2, 3, 7, 16], "enthlapi": 16, "entir": [0, 6], "entribut": 0, "entropi": [2, 3, 7, 18], "enumer": 12, "env": 1, "envconda": 1, "environ": 1, "envpycalphad": 1, "envsourc": 1, "eq": [0, 8, 12, 13, 14], "eq2": 13, "eq2_b2_bcc": 13, "eq_alni": 13, "eq_dataset": 9, "eq_kwarg": [8, 9], "eq_model": 15, "eq_result": 17, "eqplot": [0, 2, 3, 16], "eqresult": 0, "eqsolv": [0, 2, 3], "equal": [0, 5], "equat": [3, 7, 18], "equilibria": [5, 9, 16, 17, 18], "equilibrium": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 19, 21], "equilibrium_soln": 5, "equilibriumerror": [3, 5], "equilibriumresult": [5, 9], "equival": [0, 5], "eriksson": 7, "error": [0, 2, 3, 6, 18], "escaped_nam": [2, 3], "especi": 0, "essenti": [17, 22], "et": [0, 3, 9, 16, 18], "eta_i": 18, "eta_param_queri": 18, "etc": [0, 1, 5, 15, 17], "evalu": 0, "even": 9, "evenli": 5, "everi": [0, 1, 5], "everyth": [1, 22], "everywher": 0, "ex": [6, 18], "exact": 0, "exactli": 23, "examin": 10, "exampl": [0, 3, 4, 5, 6, 8, 9, 10, 15, 21], "exce": 6, "except": [0, 5, 6, 11, 13, 17, 18], "excess": [15, 18], "excess_coeff": [3, 6], "excess_coeff_indic": 6, "excess_coefficient_idx": [3, 6], "excess_energi": 18, "excess_entropi": 18, "excess_mixing_energi": [2, 3, 7], "excess_paramet": [3, 6], "excessbas": [3, 6], "excessqkto": [3, 6], "excessrkm": [3, 6], "excessrkmmagnet": [3, 6], "exclud": [0, 5, 13], "execut": 22, "exist": [6, 9, 10, 12, 14, 22], "exp": [3, 14, 18], "exp_acr_zn": 14, "exp_x_zn": 14, "expand": [0, 6], "expand_keyword": [3, 6], "expect": [0, 7, 18], "expens": [5, 6], "experiment": 0, "explicitli": 13, "explictli": [0, 10], "explor": [19, 21], "expon": [0, 3, 6], "exponenti": 0, "export": 0, "expos": 5, "expr": [3, 6], "expr_cond_pair": [3, 6], "express": [0, 3, 4, 6, 16, 18], "extend": 0, "extens": [1, 3, 7, 22], "extern": 4, "extract": [5, 15], "extract_paramet": [3, 5], "extrapol": 0, "extrapolate_temperature_bound": [2, 3], "f": [0, 3, 4, 5, 6, 12, 14, 23], "face": 9, "factor": 7, "fail": [0, 18], "fake_point": 5, "fall": 4, "fals": [3, 4, 5, 6, 7, 9, 10], "faq": 21, "fashion": 0, "fast": 4, "faster": [0, 11], "fastfunct": [3, 5], "favor": 0, "fcc": [10, 13, 16], "fcc_a1": [5, 8, 10, 16, 17], "fcc_l12": 13, "fcc_phase_indic": 13, "fcc_renb": 10, "fd": 6, "fe": [0, 11, 12, 19, 21], "fe3c1": 11, "fe_3c": [19, 21], "featur": [0, 1, 5, 12, 22], "februari": 4, "feedstock": 23, "fellowship": 21, "fetch": [0, 22], "few": [3, 5, 10, 22], "fewer": 17, "fhash": [3, 5], "fictiti": 5, "field": [4, 5, 6, 23], "fig": [10, 11, 12, 14, 15, 16, 18], "figsiz": [10, 11, 12, 15, 18], "figur": [8, 9, 10, 11, 12, 15, 16, 18, 21, 22], "file": [0, 1, 5, 6, 11, 20, 22, 23], "file_descriptor": 6, "fileexistserror": 6, "filenam": 6, "filter": 5, "filter_phas": [0, 3, 5], "final": [0, 18], "find": [0, 1, 5, 9, 15, 17, 22], "find_two_phase_region_compset": [8, 9], "fine": 0, "finish": 23, "first": [0, 3, 5, 13, 15, 23], "fit": 0, "fitzpatrick": 7, "five": 17, "fivethirtyeight": 11, "fix": [0, 3, 5, 6, 13, 15, 16, 20], "fixed_chempot_indic": 5, "fixed_comp_indic": 5, "fixed_statevar": [2, 3], "flatten": 12, "float": [0, 3, 5, 6, 9], "float64": [9, 13, 17], "flow": 0, "fluid": 18, "fmt": [0, 6], "fmt_str": [3, 7], "fname": 6, "focu": 0, "follow": [0, 3, 4, 7, 9, 21, 22, 23], "forc": 0, "force_insert": 6, "force_upp": 6, "forg": [0, 1, 22], "fork": 23, "forknam": 22, "form": [3, 5, 7, 18], "formal": [3, 7], "format": [0, 3, 6, 7, 10, 12, 18], "formul": [3, 7], "formula": [3, 6, 7, 11], "formulaenergi": [2, 3], "formulagfunc_": [3, 5], "formulagrad": [3, 5], "formulahess": [3, 5], "formulahfunc_": [3, 5], "formulamole_grad": [3, 5], "formulamole_hess": [3, 5], "formulamole_obj": [3, 5], "formulamolefuncs_": [3, 5], "formulamolegradfuncs_": [3, 5], "formulamolehessianfuncs_": [3, 5], "formulaobj": [3, 5], "formulaofunc_": [3, 5], "found": [0, 9, 10, 16, 18, 21], "four": [5, 10, 15, 17, 18], "frac": 18, "fraction": [3, 5, 7, 9, 12, 13, 17, 18, 20], "framework": 9, "free": 4, "freedom": [0, 5, 8, 10, 11, 15, 17], "fri": 3, "fritz": 11, "from": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22], "from_dataset_vertic": [8, 9], "from_fil": [0, 3, 6], "from_str": [0, 3, 6], "frozenset": [6, 9], "full": [3, 7], "fulli": [6, 17], "func": [3, 4], "func_opt": 4, "function": [0, 3, 4, 5, 6, 8, 9, 10, 11, 13, 17, 18, 20], "fund": 0, "further": 0, "futur": [0, 3, 9], "f\u00fcr": 10, "g": [1, 2, 3, 4, 5, 6, 7, 11, 13, 15, 17, 18, 20], "g1bf356e4": [13, 17], "ga": [0, 18], "gamma": 13, "gancarz": 18, "gap": [0, 5, 9, 10, 13], "gca": [10, 11, 12, 13, 14, 15, 18], "gd": 18, "ge": 11, "gener": [0, 3, 4, 5, 7, 8, 13, 16, 23], "generate_dof": [3, 5], "generate_symmetric_group": [3, 5], "geometr": 5, "get": [0, 5, 9, 10, 12, 16, 17, 18, 22], "get_compset": [8, 9], "get_dataset": [3, 5], "get_internal_constraint": [2, 3, 7], "get_line_plot_boundari": [8, 9], "get_mass_fract": [2, 3], "get_mole_fract": [2, 3], "get_new_st": [3, 5], "get_phas": [8, 9], "get_pure_el": [3, 5], "get_scatter_plot_boundari": [8, 9], "get_state_vari": [3, 5], "get_system_spec": [3, 5], "getattr": 5, "getdataset": 5, "getitem": 5, "gfecem": 11, "gibb": [0, 3, 5, 9, 10, 13, 17], "gibbs_coefficient_idx": [3, 6], "gibbs_eq_typ": [3, 6], "git": [1, 22, 23], "github": [0, 1, 4, 21, 22, 23], "gitter": 21, "give": [0, 5, 9, 17, 22], "given": [0, 5, 10, 14, 17, 22], "glass": 18, "global": [0, 3, 5, 6], "global_grid": 5, "global_min_is_poss": [3, 5], "global_nam": 6, "gm": [2, 3, 4, 5, 7, 10, 13, 15, 17, 18], "gm_mix": [2, 3, 7, 15], "gmr": [3, 7, 15], "go": [6, 14, 18, 22, 23], "goal": 6, "googl": 21, "grad": [3, 4], "grad_opt": 4, "gradient": [2, 3, 4], "gram": 3, "grammar": [0, 2, 3], "grant": 21, "graph": [3, 5], "graphit": 11, "great": 18, "greater": 13, "green": [8, 9, 22], "grid": [0, 5, 9, 20], "grid_point": 5, "gridlin": 9, "griva": 9, "group": [6, 9, 15, 18, 21], "groupbi": [0, 6], "grow": 5, "gt": [12, 13, 14, 16, 17, 18], "guarante": [0, 5], "guess": 5, "guid": 0, "guo": 18, "g\u0105sior": 18, "h": [3, 4, 23], "h298": [3, 6], "h_tran": [3, 6], "ha": [0, 3, 5, 9, 10, 11, 13, 17, 18, 20, 21, 22], "hallstedt": 11, "halton": [0, 2, 3], "hand": 17, "handbook": 3, "handl": [0, 3, 5, 6, 8, 9, 10], "happen": 13, "hargath": 10, "has_additional_term": 6, "has_h_tran": 6, "has_ptvm_term": 6, "hash": [5, 23], "hashabl": [0, 5], "have": [0, 1, 3, 5, 6, 9, 13, 15, 16, 17, 18, 22], "haven": 23, "hcp_a3": [10, 17], "hcp_renb": [10, 15], "header": [3, 6], "heat": [0, 19, 21], "heat_capac": [2, 3, 7, 11, 13], "help": [0, 22], "helper": 5, "here": [1, 3, 6, 7, 11, 13, 16, 22], "hess": [3, 4], "hess_opt": 4, "hessian": [0, 4], "hetting": 5, "hex": [8, 9], "hickel": 11, "high": 3, "higher": [3, 7, 9], "hillert": 3, "hint": 6, "hit": [5, 6], "hm": [2, 3, 5, 7, 15, 17], "hm_form": 15, "hm_mix": [2, 3, 7, 15, 16], "hmr": 15, "hold": 9, "how": [0, 4, 10, 15, 18, 21], "howev": [3, 7, 17, 18, 20], "hr_point_sampl": [3, 5], "html": 22, "http": [0, 1, 3, 4, 5, 11, 14, 21, 22, 23], "hull": [5, 9], "human": [5, 23], "hyperplan": [0, 2, 3], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 21, 22, 23], "id": 22, "idea": 5, "ideal": [3, 7], "ideal_mixing_energi": [2, 3, 7], "identchar": 6, "identifi": 6, "idmix": [3, 7, 18], "if_exist": 6, "if_incompat": 6, "ignor": [0, 3, 6], "ignore_converg": [3, 5], "ignore_phas": 9, "igorjrd": 0, "ij": 7, "imag": 20, "imagin": 15, "immedi": 6, "immut": 5, "implement": [0, 3, 5, 7, 18], "impli": [5, 17], "import": [0, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "improv": [0, 9], "inact": 0, "inc": 1, "includ": [0, 3, 4, 5, 6, 7, 10, 11, 13, 15], "include_grad": 4, "include_hess": 4, "include_obj": 4, "incompat": [0, 4, 6], "incorrectli": 0, "increas": [0, 9, 13], "inde": 13, "inden": 3, "indep_comp": 9, "indep_comp_cond": [8, 9], "indep_comp_idx": 9, "indep_comp_index": 9, "indep_composition_condit": 9, "independ": [3, 8, 9], "index": [0, 6, 9, 10, 12, 15, 17, 21], "indic": [5, 6, 13, 15, 17], "infin": 0, "infinit": 9, "influenc": 0, "inform": 0, "infrastructur": 0, "inher": 17, "initi": [0, 5, 11, 18], "initial_compset": 9, "initial_point": 5, "inlin": [10, 11, 12, 13, 14, 15, 16, 17, 18], "inplac": [1, 5, 23], "input": [0, 5], "insert": [3, 6], "insid": 0, "inst": 14, "instal": [0, 21, 22, 23], "instanc": [0, 4, 5, 8, 18], "instanti": [0, 3, 15], "instantiate_model": [3, 4, 5], "instead": [0, 5, 11], "instr": 6, "instruct": 0, "int": [3, 5, 6], "int32": [13, 17], "integ": [3, 17], "integr": 23, "interact": [0, 3, 5, 6, 7, 15], "interacting_species_idx": [3, 6], "interchang": 5, "interchangebl": 5, "interest": [5, 13, 15], "interfac": [0, 5], "intern": [0, 5, 10, 11, 15, 17], "internal_cons_func": [3, 5], "internal_cons_func_": [3, 5], "internal_cons_hess": [3, 5], "internal_cons_hess_": [3, 5], "internal_cons_jac": [3, 5], "internal_cons_jac_": [3, 5], "internal_dof": [12, 13, 17], "interpret": 22, "interstiti": [0, 3, 5], "interv": [3, 6], "intervalbas": [3, 6], "intervalcp": [3, 6], "intervalg": [3, 6], "introduc": 0, "invalid": [0, 13, 17], "invari": 10, "involv": [0, 3, 7], "io": [2, 3, 7, 18], "ionic": [0, 3], "ipopt": 0, "ipykernel_7844": 13, "is_stoichiometr": 6, "isel": [12, 15, 17], "ish": 5, "isinst": 7, "isn": [0, 5], "isobar": [0, 8, 9, 11, 19, 21], "isol": [0, 1, 22], "isotherm": [0, 8, 16], "issn": 11, "issu": [0, 4, 6, 11, 21, 23], "item": [5, 12, 22], "iter": [0, 3, 4, 5, 7, 8, 9], "its": [4, 6], "iv": 7, "ix_const_arr": 6, "j": [0, 3, 7, 9, 10, 11, 13, 18, 20], "jac_opt": 4, "jacobian": 4, "japan": 14, "jarl": 3, "jit": 0, "jnoncrysol": 18, "job": 5, "join": [12, 15], "jor": [0, 21], "journal": [18, 21], "joyc": 0, "jump": 13, "jupyt": [1, 10, 11, 13, 22], "jupyterlab": 1, "jupyterlabconda": 1, "jupyterlabgit": 1, "jupyterlabpip": 1, "jupyterlabpython": 1, "just": [0, 13], "jwsiegel2150": 0, "j\u00f6rg": 11, "k": [0, 10, 11, 13, 14, 15, 17, 18, 21], "keep": [0, 5], "kei": [3, 4, 5, 10, 12, 13, 14, 15, 16, 17], "kernel": 22, "keword": 10, "keyword": [0, 4, 5, 6, 8, 9, 10, 12, 17, 20], "kind": 5, "kinet": [0, 6], "kister": [3, 7], "kl": 7, "kluwer": 3, "know": [5, 13, 17], "known": [0, 6], "kohler_toop_excess_sum": [2, 3], "kui": 21, "kwarg": [0, 3, 5, 6, 7, 8], "kwarg_obj": 5, "k\u00f6rmann": 11, "l": [6, 10, 18], "l12_phase_indic": 13, "lab": 1, "label": [0, 8, 9, 12, 13, 14, 15, 16, 17], "label_nam": 12, "lambda": [0, 4, 5, 12], "lambdifi": [0, 4], "lambdify_default_backend": 4, "lambdify_default_cs": 4, "lambdify_default_llvm_opt_level": 4, "larg": [0, 7, 17], "last": [0, 3, 23], "later": [3, 20], "latest": [1, 21, 22, 23], "latter": 5, "lazili": [0, 3], "lead": 0, "leak": 0, "learn": 0, "least": [5, 9, 17], "least_recently_us": 5, "leav": [13, 23], "led": 0, "lee": 14, "left": [0, 10, 12, 22], "legend": [0, 8, 9, 10, 12, 13, 14, 15, 20], "legend_gener": [8, 9], "legend_handl": [8, 9, 10], "len": [5, 17], "length": [0, 3, 5, 6], "less": 9, "less_equ": 13, "let": 5, "level": [0, 1], "lf": 18, "li": 18, "librari": [0, 5, 21], "life": 0, "light_dataset": [2, 3], "lightdataset": [3, 5], "lightweight": 5, "like": [0, 5, 6, 9, 13, 14, 15, 22], "limit": [0, 5, 6], "line": [0, 6, 9, 18], "line_collect": 9, "linearli": [5, 15], "lineend": 18, "linewidth": [6, 16], "link": [6, 10, 22], "linspac": 15, "linux": [0, 1, 23], "liq_refst": 15, "liquid": [0, 3, 4, 8, 10, 13, 14, 15, 17, 18], "liquid0cu": 18, "liquid0zr": 18, "liquid_mod": 18, "liquid_renb": [10, 15], "liquidu": 16, "list": [0, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 22, 23], "list_of_refer": 18, "list_soln_species_count": [3, 6], "literatur": [10, 15, 18], "liu": 21, "ll": [5, 14], "llvm": [0, 4], "lmfit": 0, "ln": [3, 11], "load": [0, 10, 12, 18], "loc": [6, 10, 12, 13, 14], "local": [0, 5, 6, 13, 20, 23], "local_nam": 6, "localhost": 22, "locat": [3, 10], "log": [0, 3, 18, 23], "logical_and": 13, "logo": 0, "london": 3, "long": [10, 21], "longer": 0, "longest": 17, "loop": [0, 5, 10], "lot": 0, "low": [0, 10], "lower": [0, 5, 9, 13], "lower_convex_hul": [0, 2, 3], "lru": 5, "lru_cach": [3, 5], "lt": [12, 13, 14, 16, 17, 18], "lu": [0, 3], "luka": 3, "m": [1, 3, 5, 7, 9, 18, 22, 23], "mac": 0, "maco": [0, 1], "made": [6, 16, 21], "mag": 3, "magic": 10, "magnet": [0, 3, 11, 13], "magnetic_afm_factor": [3, 6], "magnetic_energi": [2, 3], "magnetic_mo": [3, 6], "magnetic_structure_factor": [3, 6], "mai": [4, 5, 9, 10], "main": [22, 23], "mainli": 0, "maint": 0, "maintain": 0, "major": [0, 6], "make": [0, 5, 9, 14, 22, 23], "make_cal": 5, "manag": 1, "mangl": 6, "mani": [0, 10, 17], "manifest": 5, "manipul": [0, 17], "map": [0, 3, 4, 5, 6, 7, 8, 10, 13, 20], "map_binari": [8, 9], "map_kwarg": 9, "march": 11, "marker": [10, 15], "mask": 17, "masked_eq_r": 12, "masked_result": 15, "mass": [3, 5], "mass_fract": 3, "mass_obj": [3, 5], "mass_obj_2d": [3, 5], "massfract": [0, 2, 3], "massfunc": 4, "massfuncs_": [3, 5], "master": [1, 23], "match": [3, 6, 9, 17, 22, 23], "matchstr": 6, "materi": [0, 7, 21], "matertrans1960": 14, "mathbb": 4, "mathemat": 0, "mathrm": 3, "matplotlib": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20], "matplotlibrc": 20, "matrix": [0, 5], "matter": 17, "max": [0, 5, 9, 13], "max_composit": [8, 9], "max_endmember_pair": 0, "max_extra_point": 0, "max_iter": 5, "maximum": [6, 9], "maxsiz": 5, "mean": [0, 4, 5, 7, 9, 17, 22], "mean_composit": [8, 9], "meaning": 9, "measur": [14, 15], "mei": 14, "melt": 13, "member": [0, 5], "memori": 0, "menu": 22, "merg": [3, 5, 23], "messag": [0, 22], "met": 14, "meta": 23, "metadata": [3, 6], "metallkund": 10, "metallurg": 7, "metast": 0, "method": [0, 3, 5, 6, 7, 15, 18, 21], "mf": 18, "mg_zhong": 10, "microsoft": [0, 1, 22], "might": 17, "mileston": 23, "min": [9, 13], "min_composit": [8, 9], "min_step_length": 0, "mingw": 0, "mingw64": 22, "miniconda": [1, 22], "minim": [0, 2, 3, 9, 11], "minimum": [0, 3, 9], "minimum_composit": 9, "minimum_df": 5, "minor": 0, "minut": [0, 23], "misc_gap_tol": 9, "miscibl": [0, 5, 9, 10, 13], "mismatch": 0, "miss": [5, 23], "mistak": 0, "mix": [0, 3, 7, 16, 17], "mix_": 0, "mixing_cod": [3, 6], "mixing_const": [3, 6], "mixing_energi": [2, 3, 7], "mixing_enthalpi": [2, 3, 7], "mixing_entropi": [2, 3, 7], "mixing_expon": [3, 6], "mixing_heat_capac": [2, 3, 7], "mixing_typ": [3, 6], "mnt": 0, "mobil": 0, "mod": [5, 12, 15, 18], "mod_liq": 15, "mode": [0, 5], "model": [0, 2, 4, 5, 6, 10, 12, 13, 15, 16, 17, 19, 21], "model_hint": [0, 3, 6], "model_mqmqa": [2, 3], "modelmqmqa": [3, 7], "modif": 3, "modifi": [0, 3, 5, 7], "modul": [0, 2, 16, 21], "mol": [11, 13, 20], "molar": [0, 11, 17, 20], "molar_volum": 0, "mole": [0, 2, 3, 5, 7, 9, 11, 17, 18, 20], "mole_fract": 3, "molefract": [2, 3, 8], "molten": 7, "moment": 0, "more": [0, 5, 9, 13, 17, 18, 22], "most": [0, 6, 9, 23], "move": [0, 16], "mpa": 18, "mpl": 20, "mpz": 21, "mq": 18, "mqmqa": 7, "mt": 22, "mu": [2, 3, 13, 14, 17], "much": 0, "muggianu": [3, 7], "multi": [0, 5], "multidimension": 17, "multipl": [0, 5, 10, 12], "multipli": 11, "multiprocess": 0, "must": [1, 3, 4, 5, 6, 7, 8, 9, 10, 14], "mv": 0, "my_phas": 13, "my_phases_alf": 10, "my_phases_alzn": 10, "my_phases_nbr": 10, "mydb": 6, "n": [1, 4, 5, 6, 9, 10, 11, 12, 13, 17, 18, 22], "n_": 7, "n_pt": 15, "nabla": 4, "name": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 17, 18, 22], "namespac": 0, "nan": [3, 5, 13, 17], "nasa": 21, "navig": 22, "nb": 15, "nb_ref": 15, "nbpt": 5, "nbre_liu": [10, 15], "ndarrai": [5, 9], "necessari": 0, "necessarili": [5, 17], "need": [0, 1, 3, 5, 7, 11, 13, 14, 15, 18], "neel_temperatur": [2, 3, 7], "neg": 3, "nest": 5, "netcdf": 0, "neugebau": 11, "neutral": 3, "never": 17, "new": [3, 5, 7, 9, 10, 15, 18, 21, 22, 23], "newer": 0, "newest": 21, "newli": [0, 23], "next": [9, 13, 22, 23], "ni": [0, 4, 5, 19, 21], "ni_al_dupin_2001": [10, 13], "nice": 0, "nist": 16, "nn": 18, "nnx14al43h": 21, "no_conflict": 5, "non": [1, 5, 6, 18], "none": [0, 3, 4, 5, 6, 7, 8, 9, 17, 18], "nonneg": 3, "nonvacant_el": [3, 5], "nonzero": [0, 13, 15], "normal": [0, 3, 7], "note": [0, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 17], "notebook": [10, 11, 13, 17], "noth": [11, 23], "notic": [0, 13, 15, 18], "now": [0, 9, 15, 18, 20, 22], "np": [2, 3, 5, 9, 10, 11, 12, 13, 14, 15, 17, 18], "nstrf": 21, "nt": [2, 3, 7, 18], "num": 5, "num_const": 6, "num_excess_coeff": 6, "num_gibbs_coeff": 6, "num_internal_con": [3, 5], "num_pair": [3, 6], "num_point": 5, "num_pure_el": 6, "num_quadruplet": [3, 6], "num_reserved_row": 5, "num_statevar": [3, 5], "num_stoich_phas": [3, 6], "num_subl_1_const": [3, 6], "num_subl_2_const": [3, 6], "num_vertex": 9, "numba": 0, "number": [0, 3, 4, 5, 6, 7, 17, 22, 23], "number_of_atom": [2, 3], "numer": [0, 5, 11], "numexpr": 0, "numpi": [0, 5, 10, 11, 12, 13, 14, 15, 17, 18], "o": [0, 5, 9, 10, 12, 23], "obj": [3, 5, 7], "obj_2d": [3, 5], "obj_parameters_2d": [3, 5], "object": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 18], "observ": 13, "obsolet": 0, "obviou": 0, "occasion": [0, 20], "occup": 20, "occupi": 15, "occur": 6, "off": [0, 10, 21], "often": [4, 15, 16], "ofunc_": [3, 5], "ohtani": 0, "old": 0, "omit": 11, "onboard": 21, "onc": [0, 5, 7, 9, 23], "one": [0, 3, 5, 6, 7, 8, 9, 17], "onelin": 23, "ones": [4, 15], "onli": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 17, 18, 20], "open": [6, 21], "oper": [1, 5, 17, 22], "opt": 5, "opt_level": 4, "optim": [0, 3, 4], "option": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13, 17], "ord": 3, "order": [0, 3, 5, 6, 7, 9, 14, 15, 17, 19, 20, 21], "ordereddict": 5, "org": [0, 3, 5, 11, 14, 21], "organ": 9, "origin": [10, 22, 23], "osx": [0, 1, 23], "other": [0, 3, 5, 6, 9, 13, 17, 18, 22], "otherwis": 9, "oti": 21, "our": [16, 18, 22], "out": [0, 5, 6, 9, 20, 22, 23], "out_energi": 5, "outp": 5, "output": [0, 3, 4, 5, 7, 9, 10, 11, 13, 15, 16, 17, 18], "over": [0, 9, 10, 14, 17, 20], "overal": 10, "overhead": 0, "overrid": [0, 4, 5], "overridden": 4, "overwrit": [3, 6], "overwritten": 5, "own": 22, "p": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "pa": [17, 18], "packag": [0, 1, 2, 20], "pad": 0, "pade": 17, "page": [11, 22], "pair": [7, 9], "pairwise_xdiscrep": [8, 9], "panda": [0, 17], "pandoc": 22, "paper": [0, 10], "parallel": [0, 4, 21], "paralleliz": 0, "param": 6, "param_ord": 6, "param_queri": 3, "param_search": [3, 18], "param_typ": 6, "paramagnet": 13, "paramet": [0, 3, 4, 5, 6, 7, 8, 9, 11], "parameter_array_length": 5, "parameter_ord": [3, 6], "parameter_symbol": 4, "parameter_typ": 18, "pardalo": 3, "parenthes": 22, "parit": 3, "pars": [0, 3, 6, 18], "parse_additional_term": [3, 6], "parse_chemical_formula": [3, 6], "parse_cs_dat": [3, 6], "parse_endmemb": [3, 6], "parse_endmember_aqu": [3, 6], "parse_endmember_qkto": [3, 6], "parse_endmember_subq": [3, 6], "parse_excess_magnetic_paramet": [3, 6], "parse_excess_paramet": [3, 6], "parse_excess_parameters_pitz": [3, 6], "parse_excess_qkto": [3, 6], "parse_head": [3, 6], "parse_interval_gibb": [3, 6], "parse_interval_heat_capac": [3, 6], "parse_phas": [3, 6], "parse_phase_aqu": [3, 6], "parse_phase_cef": [3, 6], "parse_phase_real_ga": [3, 6], "parse_phase_subq": [3, 6], "parse_ptvm_term": [3, 6], "parse_quadruplet": [3, 6], "parse_stoich_phas": [3, 6], "parse_subq_excess": [3, 6], "parseimpl": [3, 6], "parsen": [3, 6], "parser": [0, 6, 11], "part": [3, 7, 21], "partial": [19, 21], "particular": [4, 5], "particularli": [0, 15], "partit": [0, 3], "pases": 9, "pass": [0, 4, 5, 6, 8, 9, 10, 15, 17, 20, 22, 23], "path": [0, 10, 22], "pattern": 6, "pc": [3, 6], "pden": [0, 5, 16], "pdof": 5, "peak": 13, "pelton": 7, "pend": 0, "pennsylvania": 21, "pep": 0, "per": [0, 3, 5, 7, 11, 20], "per_formula_unit": [3, 7], "perform": [0, 3, 4, 5, 6, 9, 17], "perman": 20, "ph": 15, "phase": [0, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 17, 18, 19, 20, 21], "phase_amt": 5, "phase_aqu": [3, 6], "phase_cef": [3, 6], "phase_constitu": 6, "phase_dof": [3, 5], "phase_handl": [12, 13], "phase_indic": [13, 17], "phase_legend": [0, 3, 8, 9, 10, 12, 13], "phase_nam": [0, 2, 3, 4, 5, 6, 9, 10, 15, 18], "phase_realga": [3, 6], "phase_rec": [2, 3], "phase_record": [3, 5], "phase_set": 15, "phase_stoichiometr": [3, 6], "phase_subq": [3, 6], "phase_typ": [3, 6], "phasebas": [3, 6], "phasefract": [2, 3], "phasemap": [12, 13], "phaserecord": [0, 3, 4, 5], "physic": [3, 15, 17], "pick": 0, "pickl": [0, 4], "pickleabl": 5, "piec": 0, "piecewis": [0, 6], "pii": 11, "pin": 0, "pip": [0, 21, 22, 23], "piro": 7, "place": 5, "plai": 3, "plan": 0, "platform": [0, 1, 23], "pleas": [0, 16, 20, 21], "plot": [0, 2, 3, 11, 12, 15, 17, 18, 19, 21], "plot_boundari": [8, 9], "plot_kwarg": [8, 9, 10, 12], "plt": [9, 10, 11, 12, 13, 14, 15, 16, 18, 20], "plug": 18, "plugin": 0, "pmb": 4, "point": [0, 3, 5, 9, 13, 15, 16, 17, 20, 22, 23], "point_sampl": [3, 5], "pointer": 5, "pointwis": 0, "polynomi": [3, 6, 7], "portion": 3, "poschmann": 7, "posit": [3, 16], "possibl": [0, 5, 6, 10, 17, 20, 21], "post1": 21, "post_solve_hook": [3, 5], "potenti": [0, 3, 5, 8, 9, 13, 16, 17], "power": 0, "practic": 1, "pre": [4, 5, 23], "pre_solve_hook": [3, 5], "preced": 9, "precis": 0, "predict": 18, "prefix": 0, "presenc": 13, "present": [5, 10, 17], "press": 3, "pressur": [3, 15, 17], "previou": [0, 15], "previous": 0, "primari": 5, "prime": [5, 13], "principl": 4, "print": [0, 4, 5, 6, 9, 10, 13, 15, 17, 18], "probabl": 0, "problem": 0, "problemat": 5, "proce": 9, "process": [0, 1, 6], "process_parameter_queu": [3, 6], "produc": [0, 4, 6], "product": 5, "prof": 21, "profil": 0, "programat": 10, "programmat": 10, "progress": 0, "project": [0, 1], "proper": 6, "properli": [0, 22], "properti": [0, 3, 4, 5, 7, 11, 15, 16, 17, 18, 19, 21], "protocol": 7, "prototyp": 5, "provid": [0, 3, 5, 6, 9, 16], "pseudo": 0, "pt": 5, "ptvm_term": [3, 6], "ptvmterm": [3, 6], "public": [0, 21, 23], "publish": [0, 3, 11, 23], "pull": [0, 1, 22, 23], "pure": [0, 3, 4, 5, 7, 9, 13, 14, 15, 18], "pure_el": [3, 5, 6], "pure_element_mass_dict": 3, "pure_elements_mass": [3, 6], "push": [22, 23], "pv": 0, "pxd": [1, 23], "py": [0, 1, 4, 13, 22, 23], "py26": 5, "py30": 5, "pycalphad": [0, 2, 10, 11, 12, 13, 14, 15, 16, 17, 19], "pycalphadcd": 1, "pycalphadconda": 1, "pycalphadpip": 1, "pycalphadpython": 1, "pypars": [0, 6], "pypi": [0, 1, 21], "pypirc": 23, "pyplot": [8, 10, 11, 12, 13, 14, 15, 16, 18], "pyproject": [0, 1], "pytest": [1, 22, 23], "python": [0, 1, 5, 21, 22, 23], "pythonconda": 1, "pyx": 1, "quadruplet": [0, 3, 6, 7], "quadruplet_coordin": [3, 6], "quadruplet_idx": [3, 6], "quantiti": [3, 20], "quasi": [3, 5, 7], "quasichem": [0, 7], "queri": [3, 6, 18], "question": [5, 21], "queue": 6, "quickli": 0, "r": [1, 3, 4, 7, 14, 18, 21, 22, 23], "rais": [0, 6, 18], "random": 5, "randomli": [3, 5, 15], "rang": [10, 13, 14, 20], "rather": 17, "ratio": [3, 6], "raw": 6, "raymond": 5, "rcparam": 20, "re": [0, 3, 6, 14, 15, 18], "re_ref": 15, "reaction": 10, "read": [0, 3, 6, 11, 22], "read_cs_dat": [3, 6], "read_tdb": [3, 6], "readabl": [5, 23], "reader": 0, "readi": 22, "readm": 0, "readthedoc": 0, "real": [0, 3, 9], "reason": 9, "rebuild": [4, 9], "rebuild_two_phase_region": [8, 9], "receiv": 22, "recent": [0, 5, 7, 9, 23], "recip": [5, 23], "recommend": [0, 21], "recompil": 1, "record": 4, "rectifi": 6, "recurs": 5, "recursionerror": 21, "recursive_tuplifi": [3, 5], "red": [8, 13], "redlich": [3, 7], "redlich_kister_sum": [0, 2, 3, 18], "reduc": 0, "reevalu": 14, "ref": [3, 6, 7, 18], "ref_eq": 14, "refactor": 0, "refdata": 0, "refer": [0, 3, 5, 6, 7, 13, 17, 19, 21], "referenc": 15, "reference_energi": [2, 3, 7], "reference_fil": [0, 18], "reference_model": [3, 7], "reference_phas": 3, "reference_st": [3, 7], "referencest": [2, 3, 7, 15], "refin": 0, "reflect": [0, 1], "reflow_text": [3, 6], "reflowed_text": 6, "refstat": 0, "regardless": [0, 5, 13], "regener": [0, 23], "regex": 0, "region": [8, 9, 10, 17, 20], "regist": 16, "register_format": [0, 3, 6], "regress": 0, "reject": 0, "rel": [5, 13, 23], "relat": [5, 6, 8], "relax": 0, "releas": [0, 1, 21], "relev": [3, 5, 7, 8, 9, 10], "reli": 7, "remain": 3, "remov": [0, 3, 5, 7, 10, 13, 22], "remove_metast": 5, "renam": [0, 6], "rename_element_charg": [3, 6], "reorgan": 0, "repeat": [6, 18], "replac": [0, 3, 7, 22, 23], "repo": 23, "report": [0, 6, 15, 17, 21], "repositori": 23, "repres": [3, 5, 9, 17], "represent": [3, 6, 9], "reproduc": 10, "request": [0, 22, 23], "requir": [0, 1, 3, 5, 6, 10, 15, 20, 22], "research": 21, "reserv": 3, "residu": 0, "resolut": 0, "resolv": [0, 23], "respect": [0, 4, 15, 22], "respoitori": 22, "respons": [4, 9], "restrict": 6, "result": [0, 3, 5, 6, 8, 10, 11, 15, 18, 22], "result_arrai": 5, "result_fract": 5, "result_simplex": 5, "retain": 3, "retriev": 3, "return": [3, 4, 5, 6, 7, 8, 9, 13, 17, 18], "reusabl": 5, "review": 22, "revis": 23, "rewrit": 0, "rewritten": 0, "rgb": [8, 9], "rgba": [8, 9], "richard": 11, "right": [13, 22], "rightarrow": 4, "rm": [22, 23], "roadmap": 0, "robust": 0, "role": 3, "romeijn": 3, "room": 0, "root": 1, "rotat": 16, "roti": 13, "roughli": 20, "routin": [0, 5, 8, 11], "rst": 23, "rule": [0, 5, 17], "run": [0, 1, 5, 10, 18, 20, 22], "run_loop": [3, 5], "runtim": 4, "runtimewarn": 13, "s0364": 10, "s0364591610000052": 11, "s11661": 7, "s298": [3, 6], "s_": 18, "safe": 3, "sai": 22, "salt": 7, "same": [3, 5, 7, 9, 11, 14, 15, 17, 22], "same_phas": [8, 9], "sampl": [0, 4, 5, 15, 16, 17], "sampler": 5, "sanit": 0, "satisfi": [0, 5, 7], "save": [1, 3, 10, 21, 23], "savefig": 20, "scalar": 10, "scalarmapp": 16, "scatter": [8, 9, 10, 12, 13, 14, 15, 16, 18], "scatter_dict": 9, "scatterplot": 16, "schedul": [0, 5], "scheme": 0, "scienc": [0, 11, 21], "sciencedirect": 11, "scientif": 1, "scm": 0, "scrambl": [0, 5], "script": [0, 1, 23], "sdist": [0, 23], "search": [0, 3, 6, 9, 18, 22], "second": [3, 13, 15, 22], "section": [0, 3, 16], "see": [0, 3, 5, 6, 9, 13, 15, 17, 18, 22], "segment": 9, "sel": [5, 10, 14, 15, 17, 18], "select": [5, 13, 14, 17, 22], "self": [3, 7, 10, 18], "sellebi": 3, "semant": [7, 23], "sens": 5, "separ": [0, 5, 6], "seq": [5, 11], "sequenc": [0, 3, 5], "serial": 4, "serializ": 0, "seriou": 0, "serv": 22, "server": 22, "session": 0, "set": [0, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 18, 23], "set_arrai": 16, "set_aspect": 14, "set_label_coord": 16, "set_rot": 16, "set_titl": [12, 13, 15, 16, 18], "set_xlabel": [10, 11, 12, 13, 15, 16, 18], "set_xlim": [10, 12, 13, 15, 18], "set_ylabel": [10, 11, 12, 13, 15, 16, 18], "set_ylim": [12, 13], "setup": [1, 11, 23], "setup_requir": 0, "setuptool": [1, 22], "setuptools_scm": 0, "setuptoolspip": 1, "sever": [0, 3, 17], "sf_idx": 12, "sf_sym": 12, "sgte": 0, "sgte91": 0, "sha256": 23, "shape": [5, 15], "sharp": 13, "shift": [0, 15], "shift_reference_st": [2, 3, 7, 15], "should": [0, 3, 4, 5, 6, 7, 10, 11, 18, 21, 22, 23], "show": [10, 11, 12, 13, 15, 22], "shown": [10, 13], "shut": 22, "si": 20, "sigm": 18, "sigmarenb": 10, "sign": 0, "signatur": 5, "signific": 0, "significantli": 0, "silent": [0, 6], "similar": [5, 6, 9, 17, 22], "similarli": 5, "simpl": 9, "simplex": 5, "simpli": [0, 17], "simplic": 5, "simul": 0, "sinc": [0, 3, 4, 7, 11, 17, 18, 20, 23], "singl": [0, 5, 15, 17, 20], "singular": 0, "site": [3, 5, 6, 7, 9, 12, 13, 17, 20], "site_frac": [5, 9], "site_frac_atol": [8, 9], "site_fract": [2, 3, 7, 12, 15], "site_ratio": 0, "sitefract": [2, 3, 7], "six": 17, "size": [5, 11, 13], "sizeof_fmt": [3, 5], "skip": [9, 22], "skipto": 18, "slice": 17, "slightli": 11, "slow": 0, "slower": [0, 4], "sm": [2, 3, 7], "sm_mix": [2, 3, 7, 15], "small": [0, 9, 18, 20], "smallest": 9, "smoother": 0, "smr": 15, "snider": 9, "so": [0, 5, 6, 9, 10, 13, 18, 20, 22, 23], "softwar": [0, 6, 21], "solid": 18, "solut": [0, 3, 5], "solv": [0, 3, 5], "solve_st": [3, 5], "solver": [0, 2, 3], "solverbas": [3, 5], "solverresult": [3, 5], "some": [0, 5, 6, 8, 11, 16, 17], "someth": [6, 22], "sometim": [0, 21], "soon": [0, 1], "sort": [0, 5, 7, 9, 12, 15, 17], "sourc": [0, 1, 3, 4, 5, 6, 7, 8, 9, 21, 22, 23], "sp": 18, "space": [3, 5, 15, 21], "speak": 20, "spec": 5, "speci": [0, 2, 3, 4, 5, 6, 7, 15, 17, 18, 19, 21], "special": [0, 3], "species_constitu": 12, "species_nam": [3, 6], "specif": 6, "specifi": [0, 3, 4, 5, 6, 8, 10, 13, 14, 15, 22], "speed": 0, "speedup": 0, "sphinx": [22, 23], "spinel": 12, "split": 6, "squeez": [11, 12, 13, 14, 15], "stabil": 0, "stabl": [0, 5, 13, 15, 21], "stackoverflow": 5, "stage": 23, "standard": 0, "start": [0, 5, 10, 23], "starting_point": [2, 3], "startlin": 6, "startup": 0, "stash": 23, "state": [0, 3, 4, 5, 7, 10, 19, 20, 21, 23], "state_vari": [3, 4, 5, 7], "statement": 0, "statevari": [2, 3, 4, 5, 7, 8, 9, 10], "static": [3, 6, 7], "statist": 5, "steadi": 13, "steadili": 13, "step": [0, 5, 10, 11, 13, 18, 22, 23], "step_siz": 5, "still": 0, "stoichiometric_factor": [3, 6], "stoichiometry_pure_el": [3, 6], "stoichiometry_quadruplet": [3, 6], "stop": 10, "store": [3, 10, 17], "str": [3, 4, 5, 6, 7, 9, 12], "straightforward": 16, "strategi": 6, "streamlin": 0, "strict": 0, "string": [3, 4, 5, 6, 7, 8, 9, 17, 23], "stringio": 6, "strong": 0, "structur": [5, 6], "structure_entri": 6, "studi": [14, 18], "studio": 22, "style": [6, 11, 13], "subclass": [0, 4, 7, 18], "subexpress": 4, "subl_1_charg": [3, 6], "subl_1_chemical_group": [3, 6], "subl_1_const": [3, 6], "subl_2_charg": [3, 6], "subl_2_chemical_group": [3, 6], "subl_2_const": [3, 6], "subl_const_idx_pair": [3, 6], "subl_idx": 12, "subl_index": 3, "subl_ratio": [3, 6], "sublattic": [0, 3, 5, 6, 7, 15, 17], "sublattice_index": 12, "submit": 23, "submodul": 2, "subpackag": 2, "subqexcessquadruplet": [3, 6], "subqpair": [3, 6], "subqquadrupletcoordin": [3, 6], "subset": 6, "substant": 0, "substitut": [0, 3, 5, 7], "subsystem": 6, "subtract": [3, 7], "successfulli": 23, "suffix": [5, 15], "suggest": 18, "suitabl": 7, "sum": [0, 3, 5, 7, 15, 18], "sum_": 7, "sum_i": 18, "summari": 9, "summat": 3, "sun": 9, "sundman": [0, 3, 10], "sundman2015": 0, "super": 18, "superclass": 7, "supervis": 21, "suppli": [4, 10], "support": [0, 3, 4, 6, 8, 9, 18, 21], "suppress": 18, "sure": [14, 22, 23], "surfac": [5, 18, 19, 21], "suspend": 0, "switch": [0, 1], "symbol": [0, 3, 4, 5, 6, 7, 12, 18], "symbol_replac": [2, 3, 7], "symbols_onli": 5, "symengin": [0, 3, 4, 5, 6, 7], "symengine_graph": 4, "symmetr": 5, "symmetri": 5, "sympi": [0, 12], "sympifi": 0, "sympydiff_util": [2, 3], "sync": [5, 22], "syntax": [0, 3, 7, 13], "system": [0, 1, 5, 6, 7, 9, 13, 14, 16, 17, 18, 19, 21, 22], "systemspecif": [3, 5], "systemst": [3, 5], "t": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23], "t_max": [3, 6], "t_min": 6, "tab": 18, "tabular": 17, "tag": [0, 23], "take": [0, 1, 4, 5, 6, 9, 10, 13, 18, 21], "taken": [5, 14, 17], "tangent": 5, "tarbal": 23, "target": [0, 5, 23], "tc": [0, 2, 3, 6, 7, 11, 18], "tccommand": [3, 6], "tcprinter": [0, 3, 6], "tdb": [0, 2, 3, 4, 11, 12, 13, 14, 15, 16, 17], "tdb_keyword": [2, 3, 18], "tdb_param_typ": 18, "tdbdb": 10, "tdiscrep": [8, 9], "technic": 21, "technologi": 21, "tell": 18, "temp": [13, 18], "temperatur": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17], "temperature_atol": [8, 9], "temperature_in_celsiu": 12, "temperature_limit": [0, 18], "ten": 5, "tension": 18, "term": [3, 6, 7, 17], "termin": 22, "ternari": [0, 2, 3, 7, 18, 19, 21], "ternplot": [3, 8, 20], "test": [0, 1, 3, 18, 22, 23], "test_func": 5, "test_func2": 5, "testmodel": [2, 3], "testpypi": 0, "text": [0, 6, 21], "than": [0, 3, 4, 17], "thank": 0, "thcd": 18, "thei": [0, 1, 3, 4, 5, 6, 10, 14, 17], "them": [0, 4, 12, 15, 17, 22], "themselv": 5, "therefor": [7, 15], "thermo": [0, 6, 10], "thermochimica": 7, "thermodynam": [3, 5, 6, 8, 9, 10, 11, 13, 14, 16, 18], "theta": [3, 18], "thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 22, 23], "thing": [5, 18], "third": 15, "those": [3, 5, 15, 22], "though": 4, "three": [5, 10, 16, 17, 18], "through": [0, 6, 15, 17, 21, 22], "throughout": 3, "throw": 0, "thu": 17, "tie": 0, "tie_triangle_color": 8, "tielin": [0, 8, 9, 10, 20], "tieline_collect": 9, "tieline_color": [8, 9], "tight": [0, 20], "tilmann": 11, "time": [0, 1, 3, 4, 6, 7, 10, 11, 16, 17, 22, 23], "tineline_collect": 9, "tinydb": [0, 6, 18], "titl": [14, 16, 20, 23], "to_datafram": 0, "to_fil": [0, 3, 6], "to_interv": [3, 6], "to_str": [0, 3, 6], "to_xarrai": 5, "todo": 6, "togeth": 9, "toggl": 0, "tok": 6, "token": [0, 3, 6, 18], "tokenpars": [3, 6], "tokenparsererror": [3, 6], "toler": 9, "toml": [0, 1], "tool": [0, 1, 22], "toolchain": 0, "top": [1, 9, 22], "total": [5, 7], "total_mol": 5, "toward": 22, "tqdm": 0, "traceback": 0, "track": [1, 4], "tracker": [0, 6], "tradit": 0, "tran": 14, "transact": [6, 7], "transform": [3, 7], "transit": [0, 13], "transpar": 0, "travi": 0, "treat": [3, 5], "tree": [3, 7], "triangl": 0, "triangular": [0, 19, 21], "triangularaxessubplot": 16, "tricki": 0, "trigger": 23, "trivial": 6, "true": [0, 3, 4, 5, 6, 8, 9, 13], "trust": 0, "try": [0, 6, 18, 22], "trybula": 18, "tst": 0, "ttol": 9, "tup": 5, "tupl": [4, 5, 6, 8, 9], "turn": [0, 10], "tutori": [1, 17], "twine": 23, "two": [0, 3, 5, 7, 8, 9, 13, 15, 16, 20], "two_phase_region": [8, 9], "twophaseregion": [8, 9], "twostate_energi": [2, 3], "txt": [1, 22], "txtpip": 1, "type": [0, 3, 4, 5, 6, 7, 8, 9, 18], "type_definit": [0, 11, 18], "typedef": [0, 6], "typeerror": 21, "typic": [0, 3, 4, 5], "typo": 0, "u": [0, 1, 6, 16, 22], "u2": [13, 17], "u6": [13, 17], "u7": 13, "uncommit": 23, "undefin": 0, "under": [3, 5, 18], "undercool": 18, "underli": [5, 17], "understand": [3, 13], "unfamiliar": 1, "unfortun": 0, "unhandl": 0, "unicod": 0, "unifi": 0, "uniform": 5, "union": [3, 4, 5], "uniqu": [5, 9, 15], "unique_phas": [8, 9], "unique_phase_idx": 15, "unique_phase_set": 15, "unit": [0, 3, 7, 11, 21], "univers": [0, 3, 21], "unless": [20, 22, 23], "unlik": [9, 17], "unlist": 0, "unord": 6, "unpack": 5, "unpack_compon": [3, 5], "unpack_condit": [3, 5], "unpack_kwarg": [3, 5], "unpack_phas": [3, 5], "unpredict": 5, "unreli": 0, "unsupport": 6, "until": [0, 13, 22], "unus": 0, "unwrap": 0, "unwrap_piecewis": [2, 3], "up": [0, 5, 9, 16], "upcom": 23, "updat": [0, 1, 3, 5, 20, 22, 23], "upgrad": 0, "upload": [0, 23], "upper": [5, 12], "uppercas": 0, "upstream": 22, "url": 22, "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "user": [0, 3, 4, 6, 9, 13, 22], "user_funct": 5, "usernam": 22, "usual": [0, 4], "util": [2, 3, 4, 9, 10, 12, 13], "v": [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22], "v0": [0, 18], "v1": 0, "v3": 0, "va": [0, 4, 5, 10, 12, 13, 14, 15, 16, 17, 18], "vacanc": [0, 3, 5, 10], "vacancy_indic": 5, "vacani": 10, "val": 12, "valid": [5, 6, 8, 9], "valu": [0, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 23], "valueerror": [0, 18], "var": 5, "vari": 15, "variabl": [0, 2, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20], "variou": [0, 7], "vc": [0, 3, 6, 18], "ve": 22, "vector": [0, 5], "venv": 1, "verbos": [4, 5, 9], "veri": [0, 10, 13, 17, 20], "verifi": [18, 23], "version": [0, 5, 20, 21, 23], "version_d": [0, 18], "versu": 13, "vertex": [13, 14, 17], "via": [0, 20], "view": 5, "virtual": [0, 1, 22], "visc": 18, "viscos": [19, 21], "viscositymodel": 18, "visual": [0, 1, 22], "vk": [0, 18], "vm": 0, "vol": 3, "volum": [0, 11], "volume_energi": [2, 3], "volumetr": 3, "von": 11, "w": [2, 3, 7, 18, 22], "wa": [0, 9, 17, 23], "wai": [0, 3, 5, 6, 7, 16, 17, 22], "walk": 17, "wall": 16, "want": [4, 13, 18, 22], "warn": [0, 6, 22], "we": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22], "weight": [2, 3, 18], "welcom": 0, "well": [0, 22], "were": [0, 5], "what": [13, 15, 17, 21, 23], "whatev": 17, "wheel": [0, 23], "when": [0, 4, 5, 6, 9, 13, 15, 16, 17, 18, 21, 22, 23], "where": [0, 1, 3, 6, 7, 10, 12, 13, 15, 17, 18, 22], "whether": [4, 5, 6, 9], "which": [0, 1, 3, 4, 5, 7, 10, 15, 17, 22, 23], "while": [5, 18, 22], "why": 11, "width": 6, "wiki": 5, "wikipedia": 5, "window": [0, 1, 23], "within": [3, 9, 15, 22], "without": [0, 1, 4, 5, 7, 13, 17, 22], "wolf": 0, "work": [0, 1, 5, 10, 21, 23], "workflow": [0, 23], "worth": 17, "would": [0, 5, 14, 15, 17, 22], "wrap": 5, "wrap_symbol": [3, 5], "wrapper": [5, 6, 8, 9], "write": [0, 3, 6, 10, 22], "write_kwarg": 6, "write_tdb": [3, 6], "writer": 0, "written": [5, 6, 22], "wrt": 4, "www": 11, "w\u0142adys\u0142aw": 18, "x": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 22], "x_": 7, "x_al": 13, "x_i": [3, 18], "x_re": 15, "x_zn": 17, "xarrai": [0, 5, 8, 13, 14, 19, 21], "xdiscrep": [8, 9], "xfail": 22, "xi": 18, "xiong": [0, 3], "xiong_magnetic_energi": [2, 3], "xlabel": [14, 16], "xlim": 14, "xrai": 0, "xsmix": [3, 7], "xtol": 9, "xy": [6, 7], "y": [2, 3, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17], "y_chi_1_r": 15, "y_i": [3, 7], "yaml": 23, "yang": 10, "yaxi": 16, "yazawa": 14, "ydiscrep": [8, 9], "ydiscrepancy_max": [8, 9], "yet": [0, 3, 5, 6, 8, 9, 10], "yield": 5, "ylabel": [14, 16], "ylim": 14, "yong": 0, "you": [0, 1, 5, 10, 15, 16, 21, 22, 23], "your": [0, 20, 21], "yy": 18, "z": [3, 7, 8, 10, 16, 21], "z_i_ab": 6, "zeitschrift": [10, 14], "zero": [0, 3, 5, 11, 15], "zerovolume_speci": 0, "zeta": [3, 6], "zhang": 16, "zhenmin": 18, "zhou": 18, "zi": 21, "zn": [14, 17, 18], "zpf": 9, "zpf_boundary_set": [3, 8], "zpfboundaryset": [8, 9], "zr": 18, "\u00fc": 14}, "titles": ["What\u2019s New", "Install pycalphad", "API Documentation", "pycalphad package", "pycalphad.codegen package", "pycalphad.core package", "pycalphad.io package", "pycalphad.models package", "pycalphad.plot package", "pycalphad.plot.binary package", "Plotting Isobaric Binary Phase Diagrams with <code class=\"docutils literal notranslate\"><span class=\"pre\">binplot</span></code>", "Heat Capacity of Cementite (<span class=\"math notranslate nohighlight\">\\(Fe_3C\\)</span>)", "Phases with Electrically Charged Species", "Equilibrium Properties and Partial Ordering (Al-Fe and Al-Ni)", "Calculate and Plot Activity", "Calculations with Reference States", "Plotting Ternary Phase Diagrams and Using Triangular Axes", "Exploring <code class=\"docutils literal notranslate\"><span class=\"pre\">calculate</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">equilibrium</span></code> xarray Datasets", "Custom Models in pycalphad: Viscosity", "Examples", "FAQ", " pycalphad: Computational Thermodynamics", "Onboarding as a Developer", "Releasing pycalphad"], "titleterms": {"": [0, 10], "0": 0, "01": 0, "02": 0, "03": 0, "04": 0, "05": 0, "06": 0, "07": 0, "08": 0, "09": 0, "1": 0, "10": 0, "11": 0, "12": 0, "13": 0, "14": 0, "17": 0, "18": 0, "19": 0, "1991": 10, "1993": 10, "2": 0, "20": 0, "2001": 10, "2005": 10, "2013": 10, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 0, "2024": 0, "21": 0, "22": 0, "23": 0, "25": 0, "26": 0, "28": 0, "29": 0, "3": 0, "31": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "_mix": 15, "acknowledg": 21, "activ": [14, 22], "ad": 18, "al": [10, 13], "an": 20, "anaconda": 22, "ani": 20, "api": 2, "argument": 20, "ax": 16, "background": 18, "binari": [9, 10], "binplot": 10, "build": 22, "cach": 5, "calcul": [5, 10, 14, 15, 17, 18, 20], "callabl": 4, "capac": [11, 13], "cartesian": 5, "cementit": 11, "charg": 12, "chemic": 14, "cite": 21, "codegen": 4, "composition_set": 5, "compset": 9, "comput": 21, "conda": [1, 22, 23], "constant": 5, "constraint": 5, "content": [3, 4, 5, 6, 7, 8, 9], "convex": 15, "core": 5, "creat": [22, 23], "cs_dat": 6, "custom": 18, "cut": 20, "databas": [6, 14], "dataset": 17, "degre": 13, "deploi": 23, "develop": [1, 21, 22], "diagram": [10, 16], "document": 2, "doe": 20, "dupin": 10, "dure": 20, "electr": 12, "energi": [10, 15], "enthalpi": 15, "environ": 22, "eqplot": 8, "eqsolv": 5, "equilibria": 14, "equilibrium": [5, 13, 17, 20], "error": [5, 22], "eta": 18, "exampl": 19, "experiment": [14, 15], "explor": 17, "faq": 20, "fe": [10, 13], "fe_3c": 11, "figur": 20, "file": 10, "forg": 23, "fork": 22, "format": 15, "fraction": 15, "get": [14, 21], "grammar": 6, "halton": 5, "heat": [11, 13], "help": 21, "how": [20, 22], "hull": 15, "hyperplan": 5, "i": 20, "indic": 21, "instal": 1, "io": 6, "isobar": 10, "light_dataset": 5, "liu": 10, "local": 22, "logo": 21, "long": 20, "lower_convex_hul": 5, "m": 10, "manual": 23, "map": 9, "mei": 10, "mg": 10, "minim": 5, "mix": 15, "model": [3, 7, 18], "model_mqmqa": 7, "modul": [3, 4, 5, 6, 7, 8, 9], "mpz": 20, "nb": 10, "new": 0, "ni": [10, 13], "off": 20, "onboard": 22, "order": 13, "packag": [3, 4, 5, 6, 7, 8, 9], "parallel": 20, "paramet": 18, "parser": 18, "partial": 13, "perform": 18, "phase": [10, 12, 16], "phase_rec": 5, "pip": 1, "plot": [8, 9, 10, 13, 14, 16], "post1": 0, "potenti": [14, 22], "project": 16, "prompt": 22, "properti": 13, "pycalphad": [1, 3, 4, 5, 6, 7, 8, 9, 18, 20, 21, 22, 23], "pypi": 23, "re": 10, "recommend": 1, "recompil": 22, "recursionerror": 20, "refer": [14, 15], "releas": 23, "remot": 22, "repositori": 22, "result": [14, 17], "save": 20, "seiersten": 10, "set": [14, 22], "setup": 22, "should": 20, "site": 15, "softwar": 22, "solut": 22, "solver": 5, "sometim": 20, "speci": 12, "special": 15, "specif": 15, "starting_point": 5, "state": [14, 15], "structur": 17, "submodul": [3, 4, 5, 6, 7, 8, 9], "subpackag": [3, 8], "support": 20, "surfac": 10, "sympydiff_util": 4, "system": 10, "tabl": 21, "take": 20, "tdb": [6, 10, 18], "tdb_keyword": 6, "ternari": [8, 16], "ternplot": 16, "text": 20, "thermodynam": 21, "triangular": 16, "tutori": 22, "typeerror": 20, "unit": 20, "up": [14, 22], "upgrad": 1, "us": [16, 20], "util": [5, 8], "variabl": 3, "version": [1, 22], "viscos": 18, "vscode": 22, "websit": 22, "what": [0, 20], "when": 20, "workplac": 22, "write": 18, "xarrai": 17, "y": 10, "your": 22, "zhong": 10, "zn": 10, "zpf_boundary_set": 9}})